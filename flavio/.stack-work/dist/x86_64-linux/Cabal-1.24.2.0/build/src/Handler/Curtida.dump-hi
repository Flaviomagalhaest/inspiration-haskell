
==================== FINAL INTERFACE ====================
2018-06-13 12:45:39.275586 UTC

interface aulahaskell-0.0.0-LoUslvgBjWU1RbrXO1tmnM:Handler.Curtida 8002
  interface hash: bb242ef75ef4de8a96ba7242a43191d2
  ABI hash: 18641f47cb04a03f94d3de555abb9143
  export-list hash: 9e8354d7f4832feb0dc7c5b8a36d1067
  orphan hash: 5b253a5ce39c43faf8ae44df599f18d4
  flag hash: 6d73493edc0c8da032de4b3f8604d846
  sig of: Nothing
  used TH splices: False
  where
exports:
  Handler.Curtida.deleteRemoveCurtidaR
  Handler.Curtida.getNumeroCurtidasR
  Handler.Curtida.optionsBuscaCurtidaPorImagemR
  Handler.Curtida.optionsCurteImagemR
  Handler.Curtida.optionsDescurteImagemR
  Handler.Curtida.optionsInsereCurtidaR
  Handler.Curtida.optionsNumeroCurtidasR
  Handler.Curtida.optionsRemoveCurtidaR
  Handler.Curtida.patchCurteImagemR
  Handler.Curtida.patchDescurteImagemR
  Handler.Curtida.postBuscaCurtidaPorImagemR
  Handler.Curtida.postInsereCurtidaR
module dependencies: Foundation Handler.Funcs Import
                     Import.NoFoundation Model Settings Settings.StaticFiles
package dependencies: ReadArgs-1.2.3@ReadArgs-1.2.3-FZlTw1cmwFABXd9Qu17GpK
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      aeson-compat-0.3.6@aeson-compat-0.3.6-HFlClSgXxbU7TMoWqS5Yu4
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-CmDkwNPA51zjuzFcENFZ5
                      asn1-parse-0.9.4@asn1-parse-0.9.4-HSgo3I4Jg5sAQWRFdyScvb
                      asn1-types-0.3.2@asn1-types-0.3.2-Ls8owv2hbTfEqG1LKzBcjy
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-CiauZZhskHA6jYy7CqE2mZ
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-4E2p94lTx8gIceMhu8Kl9o
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw
                      basic-prelude-0.6.1.1@basic-prelude-0.6.1.1-888xsTDtS2CGSoHb1JadEF
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p
                      blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      chunked-data-0.3.0@chunked-data-0.3.0-OOunTfArGE2y1nE8RKgW4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-Iep5jMzxM1u3mGzM17Av1H
                      classy-prelude-1.2.0.1@classy-prelude-1.2.0.1-DI7QyZr6dYQLSGY5Zda29N
                      classy-prelude-conduit-1.2.0@classy-prelude-conduit-1.2.0-4VNoIEo9SLt6t7N4PwpkXU
                      classy-prelude-yesod-1.2.0@classy-prelude-yesod-1.2.0-4tCQqVxZHk5JE3z6jrBT3F
                      clientsession-0.9.1.2@clientsession-0.9.1.2-1HgInPlmxWUKWaagfkcDtu
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i
                      conduit-combinators-1.1.1@conduit-combinators-1.1.1-CbpWlJJbANPFWzQzUVNtDU
                      conduit-extra-1.1.17@conduit-extra-1.1.17-LHyPtC0nGlzDcgVxOcd4h4
                      connection-0.2.8@connection-0.2.8-7E5s9ndt8OF7NNDH3ifO8K
                      constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      cookie-0.4.2.1@cookie-0.4.2.1-ImqC1hbvUERAwQQgqhuUAD
                      cprng-aes-0.6.1@cprng-aes-0.6.1-CtFLLcV33ZSKCmRTVWdrW7
                      crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-JSCTZhqOXgH3EkiMgDwxX
                      crypto-random-0.0.9@crypto-random-0.0.9-381865WP41XFXsmS6fCaFj
                      cryptonite-0.23@cryptonite-0.23-7SwQljDtwztDJ3Fe01tUO9
                      cryptonite-conduit-0.2.0@cryptonite-conduit-0.2.0-LH1qspLlLTXKv70D84KCUO
                      css-text-0.1.2.2@css-text-0.1.2.2-GtPTSZ9vPefILuf2bXZD6W
                      data-default-0.7.1.1@data-default-0.7.1.1-Atv1ZD6t1rI1MrH9qSGaQC
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      dlist-instances-0.1.1.1@dlist-instances-0.1.1.1-JrfDmjAHlXKJeRjjD0rY07
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml
                      entropy-0.3.8@entropy-0.3.8-14HIw40nRRY968j6AdY1H4
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-7GMVhEi1femFXwSQxV5ynm
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hourglass-0.2.10@hourglass-0.2.10-pnbvWmzfcY1rOFETQEmcY
                      http-api-data-0.3.7.1@http-api-data-0.3.7.1-AT41KDpP9ayH63FPNXWrvF
                      http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q
                      http-client-tls-0.3.5.1@http-client-tls-0.3.5.1-9yHxBE9KmNa1D1xDvn7C4m
                      http-conduit-2.2.3.2@http-conduit-2.2.3.2-5MsxxcFsbFW2aX71Hx1I7R
                      http-date-0.0.6.1@http-date-0.0.6.1-AkYFHBFn90lGSerD29arC9
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      http2-1.6.3@http2-1.6.3-5WuWRsIVuKR43Sq9Cs2O4Z integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT
                      lifted-async-0.9.3@lifted-async-0.9.3-1Yr94BjFrURGjFULK2k39c
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-Ei0JSPdt7KOCD2HIA5jFqV
                      memory-0.14.8@memory-0.14.8-GdBguxykhKWC3gIuWq62O9
                      mime-types-0.1.0.7@mime-types-0.1.0.7-6b3z22GcDYZLEl2kkfCUAB
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      monad-unlift-0.2.0@monad-unlift-0.2.0-JaCplLBosjYCz9UWF6Saxw
                      mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV
                      mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R
                      mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      path-pieces-0.2.1@path-pieces-0.2.1-Ap205zdHJCr3aorBcPaHM5
                      pem-0.2.2@pem-0.2.2-CkEwei5500yF2642aAaOAi
                      persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n
                      persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS
                      pointed-5@pointed-5-GlRizu1aJXO3QG4Xelc8BV
                      postgresql-libpq-0.9.3.1@postgresql-libpq-0.9.3.1-PNtzTLZ1kPBlp0W2VWiJp
                      postgresql-simple-0.5.3.0@postgresql-simple-0.5.3.0-7wqiM7f7ESv7wSvmAjfLqt
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      process-1.4.3.0@process-1.4.3.0
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      psqueues-0.2.4.0@psqueues-0.2.4.0-CvAhEbuBRGQCwl61vq8zYS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-GmoeVeJ8L5Y51jMJ5dPk3U
                      resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      safe-exceptions-0.1.6.0@safe-exceptions-0.1.6.0-8HmohVTen8f1fXhFM1N1R3
                      say-0.1.0.0@say-0.1.0.0-4kg0VW7izQr10eu93ritVO
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      securemem-0.1.9@securemem-0.1.9-I1DISfcspndD6idpVbMBWq
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-4uYtK5a0djFILo2ePfLs47
                      skein-1.0.9.4@skein-1.0.9.4-H6iwU6ZhWxE28U4xCLTfo3
                      socks-0.5.5@socks-0.5.5-JArtPcFTnbCItWBjXwWAhO
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-6xuIA5RXrs65yyeq3HWIWP
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-HO0sHb651BeFnnIxljlexR
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      tls-1.3.11@tls-1.3.11-IxCmr8GdEutIrVRgKylzM6
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vault-0.3.0.7@vault-0.3.0.7-FSJCPczyPWW8DwvwP76qt4
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-1qlx0Hst1Fo5WZd0lT7Iw1
                      vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1
                      wai-3.2.1.1@wai-3.2.1.1-GYhAFGd1F2uKjCUZVPyC2C
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-IWVzgvpaMYRH5pqRQk33K1
                      wai-extra-3.0.20.0@wai-extra-3.0.20.0-Dj9t4P11I8BnwNE6pZcEP
                      wai-logger-2.3.0@wai-logger-2.3.0-G2LMsBpHwLV49tDfVWxzX4
                      warp-3.2.13@warp-3.2.13-FhWulh599WH9bUCGJnpWGc
                      word8-0.1.3@word8-0.1.3-9o1uWQQ6KysJq8GGsVHHit
                      x509-1.7.2@x509-1.7.2-IixRXIQfpHlXunpaQDNuQ
                      x509-store-1.6.5@x509-store-1.6.5-LPi8AM9vMZO97SZk6SmtWd
                      x509-system-1.6.6@x509-system-1.6.6-GUxFbyk0TndCMp8nKvvL3M
                      x509-validation-1.6.9@x509-validation-1.6.9-4jWSRkWS3kAKZsU0SpJst
                      xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx
                      xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-2Pr735gWMIKE1KECS4SIv1
                      yaml-0.8.23.3@yaml-0.8.23.3-C6ya2ht5lnU5AAyP9utctL
                      yesod-1.4.5@yesod-1.4.5-GDhOBR6sYcs6xIyNy56Max
                      yesod-auth-1.4.19@yesod-auth-1.4.19-Lis3qGCnpJgB8Xqabl9Sxo
                      yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V
                      yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU
                      yesod-newsfeed-1.6@yesod-newsfeed-1.6-FVeGFThDxmyHNMY2ecmTrZ
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc
                      yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Request
         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path.CurrentOS
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
         yesod-auth-1.4.19@yesod-auth-1.4.19-Lis3qGCnpJgB8Xqabl9Sxo:Yesod.Auth
family instance modules: adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         aulahaskell-0.0.0-LoUslvgBjWU1RbrXO1tmnM:Foundation
                         aulahaskell-0.0.0-LoUslvgBjWU1RbrXO1tmnM:Model
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Block.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.BoxedArray
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Monad
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.MutableBuilder
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.NonEmpty
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Numerical.Subtractive
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ASCII7
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF16
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF32
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.AsciiString
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.OffsetSize
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UArray.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UTF8.Base
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Conduit
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Pipe
                         constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB:Data.Constraint.Forall
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml:Text.Email.Parser
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Bitmap
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Buildable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Element
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Keyed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Mutable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Range
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT:Data.Key
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et:Control.Monad.Logger
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Containers
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.MonoTraversable
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.NonNull
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Sequences
                         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.BRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Class
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.DLList
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Deque
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.PRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.SRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.URef
                         mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph:Network.URI
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistConfig
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Internal.Css
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
                         xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT:Data.XML.Types
                         yesod-auth-1.4.19@yesod-auth-1.4.19-Lis3qGCnpJgB8Xqabl9Sxo:Yesod.Auth
                         yesod-auth-1.4.19@yesod-auth-1.4.19-Lis3qGCnpJgB8Xqabl9Sxo:Yesod.Auth.Routes
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Class.Handler
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Types
                         yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.Internal f040a64200abf1dfa06f5db9b9e027c1
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.ToJSON d8ae0f04da94d706b89336fd9d0bf43b
import  -/  Foundation c81dbda790d0c6441ae4225a72f72564
  Handler 14f5b5a139b3b7cad6b81600110eae84
import  -/  Handler.Funcs d655a6f18c452adda484bfbd0a459457
  exports: 50141f5034b38d0ecb0fcb0748e142c7
  DELETE 808d33abfdad3295feb5987c9cc44af3
  GET 6b4978b05c1cf220f05498c655eb8c62
  OPTIONS d16090caad0f6de85eec11595704dd14
  PATCH 369d7e792fb5d86d1dc95550039962dd
  POST c24650d9609a6fd5ccf7d1fc1cc19b22
  anyOriginIn 51d8c695e15ac7cb31822b7af5638644
import  -/  Import 024da0f583ff2528c2bb7728a75674de
  exports: 18a5bfe97fabde61cd51757c468630c7
import  -/  Model c45fb110e879c05527bfe610b45fd68e
  Curtida 0ca4fd4ab4563c9f785c5c9a266779ce
  CurtidaId f75bf51c3cd629f444dfd3349890e64a
  CurtidaId 72301cec54aae53676b2f83f7d1c89ba
  CurtidaImagemid f62c21019ca1fa7b25f975fd4bba0fbb
  CurtidaNegativas 2f9d98c3a1bef4ed8ffcc46d7cfd011e
  CurtidaPositivas 558d7ee12fd13d2ed7008ba3347c322b
  ImagemId 9d9217d90131f4f5b156ac72db4d1a71
import  -/  http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY:Network.HTTP.Types.Status 89141eb12608ef6ae13b4ca925571920
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist 0aff630e744e4e31b8f30afb6ba2be6c
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistQuery f49c24dcd0623057eaedb42271af367b
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistStore cf3035bd99fb071645511275577dc7fe
import  -/  persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n:Database.Persist.Postgresql 10b056d5394430454ce529b83ca42db3
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Handler 5eeae0813494c783beb7f9babd90b06a
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Json a974a49c1b441c1d779a78e641086a29
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc:Yesod.Persist.Core e6c69656dbdff229818a75455816a39b
c9100fc5248043e4eb4b8a109c2451d9
  $s$WCurtidaImagemid2 ::
    Database.Persist.Class.PersistEntity.Key Model.Imagem
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key Model.Imagem
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Model.Imagem)
                   @ (Database.Persist.Class.PersistEntity.Key Model.Imagem)
                   @~ <Database.Persist.Class.PersistEntity.Key Model.Imagem>_N) -}
e927a65a51a9c711b065c319c4b410e9
  $s$WCurtidaNegativas2 :: GHC.Types.Int GHC.Types.~~ GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   @~ <GHC.Types.Int>_N) -}
39f6d853e097ffc3830c28169fdf0323
  $s$fFromJSON(,) ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Database.Persist.Class.PersistEntity.Key Model.Imagem,
       GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                     GHC.Types.Int)
                  (GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (Data.Aeson.Types.Internal.Array
                        -> Data.Aeson.Types.Internal.Parser
                             (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                              GHC.Types.Int))
                     @ (Data.Aeson.Types.Internal.Value
                        -> Data.Aeson.Types.Internal.Parser
                             (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                              GHC.Types.Int))
                     (Data.Aeson.Types.FromJSON.withArray
                        @ (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                           GHC.Types.Int)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "(a, b)"#)))
                     (\ (t :: Data.Aeson.Types.Internal.Array) ->
                      let {
                        n :: GHC.Types.Int
                        = Data.Vector.Fusion.Util.unId
                            @ GHC.Types.Int
                            (Data.Vector.Fusion.Bundle.Monadic.length
                               @ Data.Vector.Fusion.Util.Id
                               @ Data.Vector.Vector
                               @ Data.Aeson.Types.Internal.Value
                               Data.Vector.Fusion.Util.$fMonadId
                               (Data.Vector.Fusion.Bundle.Monadic.fromVector
                                  @ Data.Vector.Fusion.Util.Id
                                  @ Data.Vector.Vector
                                  @ Data.Aeson.Types.Internal.Value
                                  Data.Vector.Fusion.Util.$fMonadId
                                  (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                                  t))
                      } in
                      case GHC.Classes.eqInt n (GHC.Types.I# 2#) of wild {
                        GHC.Types.False
                        -> GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Base.String
                             @ (Data.Aeson.Types.Internal.Parser
                                  (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                   GHC.Types.Int))
                             (Data.Aeson.Types.Internal.$fMonadFailParser_$cfail
                                @ (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                   GHC.Types.Int))
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b1
                                   (c :: GHC.Types.Char -> b1 -> b1)[OneShot]
                                   (n1 :: b1)[OneShot] ->
                                 GHC.CString.unpackFoldrCString#
                                   @ b1
                                   "cannot unpack array of length "#
                                   c
                                   (GHC.Base.foldr
                                      @ GHC.Types.Char
                                      @ b1
                                      c
                                      (GHC.CString.unpackFoldrCString#
                                         @ b1
                                         " into a tuple of length 2"#
                                         c
                                         n1)
                                      (GHC.Show.$fShowInt_$cshow n))))
                        GHC.Types.True
                        -> let {
                             d :: Data.Aeson.Types.Internal.Parser
                                    (Database.Persist.Class.PersistEntity.Key Model.Imagem)
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ (Database.Persist.Class.PersistEntity.Key Model.Imagem)
                                 Model.$fFromJSONKey0_$cparseJSON
                                 (GHC.Types.I# 0#)
                                 t
                           } in
                           let {
                             d1 :: Data.Aeson.Types.Internal.Parser
                                     (GHC.Types.Int
                                      -> (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                          GHC.Types.Int))
                               {- Arity: 3 -}
                             = Data.Aeson.Types.FromJSON.$fFromJSON(,)_$s<$>
                                 @ (Database.Persist.Class.PersistEntity.Key Model.Imagem)
                                 @ (GHC.Types.Int
                                    -> (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                        GHC.Types.Int))
                                 (GHC.Tuple.(,)
                                    @ (Database.Persist.Class.PersistEntity.Key Model.Imagem)
                                    @ GHC.Types.Int)
                                 d
                           } in
                           let {
                             e :: Data.Aeson.Types.Internal.Parser GHC.Types.Int
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Types.Int
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON5
                                 (GHC.Types.I# 1#)
                                 t
                           } in
                           GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (forall (f :: * -> *) r.
                                Data.Aeson.Types.Internal.JSONPath
                                -> Data.Aeson.Types.Internal.Failure f r
                                -> Data.Aeson.Types.Internal.Success
                                     (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                      GHC.Types.Int)
                                     f
                                     r
                                -> f r)
                             @ (Data.Aeson.Types.Internal.Parser
                                  (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                   GHC.Types.Int))
                             (\ (tpl :: forall (f :: * -> *) r.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f r
                                        -> Data.Aeson.Types.Internal.Success
                                             (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                              GHC.Types.Int)
                                             f
                                             r
                                        -> f r) ->
                              tpl)
                               `cast`
                             (<forall (f :: * -> *) r.
                               Data.Aeson.Types.Internal.JSONPath
                               -> Data.Aeson.Types.Internal.Failure f r
                               -> Data.Aeson.Types.Internal.Success
                                    (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                     GHC.Types.Int)
                                    f
                                    r
                               -> f r>_R
                              ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                            <(Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                              GHC.Types.Int)>_R))
                             (\ @ (f :: * -> *)
                                @ r
                                (path :: Data.Aeson.Types.Internal.JSONPath)
                                (kf :: Data.Aeson.Types.Internal.Failure f r)
                                (ks :: Data.Aeson.Types.Internal.Success
                                         (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                          GHC.Types.Int)
                                         f
                                         r) ->
                              Data.Aeson.Types.Internal.runParser
                                @ (GHC.Types.Int
                                   -> (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                       GHC.Types.Int))
                                d1
                                @ f
                                @ r
                                path
                                kf
                                (\ (a1 :: GHC.Types.Int
                                          -> (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                              GHC.Types.Int)) ->
                                 Data.Aeson.Types.Internal.runParser
                                   @ (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                      GHC.Types.Int)
                                   (GHC.Base.$
                                      @ 'GHC.Types.PtrRepLifted
                                      @ (forall (f1 :: * -> *) r1.
                                         Data.Aeson.Types.Internal.JSONPath
                                         -> Data.Aeson.Types.Internal.Failure f1 r1
                                         -> Data.Aeson.Types.Internal.Success
                                              (Database.Persist.Class.PersistEntity.Key
                                                 Model.Imagem,
                                               GHC.Types.Int)
                                              f1
                                              r1
                                         -> f1 r1)
                                      @ (Data.Aeson.Types.Internal.Parser
                                           (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                            GHC.Types.Int))
                                      (\ (tpl :: forall (f1 :: * -> *) r1.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f1 r1
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (Database.Persist.Class.PersistEntity.Key
                                                         Model.Imagem,
                                                       GHC.Types.Int)
                                                      f1
                                                      r1
                                                 -> f1 r1) ->
                                       tpl)
                                        `cast`
                                      (<forall (f1 :: * -> *) r1.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f1 r1
                                        -> Data.Aeson.Types.Internal.Success
                                             (Database.Persist.Class.PersistEntity.Key Model.Imagem,
                                              GHC.Types.Int)
                                             f1
                                             r1
                                        -> f1 r1>_R
                                       ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                     <(Database.Persist.Class.PersistEntity.Key
                                                         Model.Imagem,
                                                       GHC.Types.Int)>_R))
                                      (\ @ (f1 :: * -> *)
                                         @ r1
                                         (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                         (kf1 :: Data.Aeson.Types.Internal.Failure f1 r1)
                                         (ks1 :: Data.Aeson.Types.Internal.Success
                                                   (Database.Persist.Class.PersistEntity.Key
                                                      Model.Imagem,
                                                    GHC.Types.Int)
                                                   f1
                                                   r1) ->
                                       Data.Aeson.Types.Internal.runParser
                                         @ GHC.Types.Int
                                         e
                                         @ f1
                                         @ r1
                                         path1
                                         kf1
                                         (\ (a2 :: GHC.Types.Int) ->
                                          let {
                                            a3 :: (Database.Persist.Class.PersistEntity.Key
                                                     Model.Imagem,
                                                   GHC.Types.Int)
                                            = a1 a2
                                          } in
                                          Data.Aeson.Types.Internal.runParser
                                            @ (Database.Persist.Class.PersistEntity.Key
                                                 Model.Imagem,
                                               GHC.Types.Int)
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall (f2 :: * -> *) r2.
                                                  Data.Aeson.Types.Internal.JSONPath
                                                  -> Data.Aeson.Types.Internal.Failure f2 r2
                                                  -> Data.Aeson.Types.Internal.Success
                                                       (Database.Persist.Class.PersistEntity.Key
                                                          Model.Imagem,
                                                        GHC.Types.Int)
                                                       f2
                                                       r2
                                                  -> f2 r2)
                                               @ (Data.Aeson.Types.Internal.Parser
                                                    (Database.Persist.Class.PersistEntity.Key
                                                       Model.Imagem,
                                                     GHC.Types.Int))
                                               (\ (tpl :: forall (f2 :: * -> *) r2.
                                                          Data.Aeson.Types.Internal.JSONPath
                                                          -> Data.Aeson.Types.Internal.Failure f2 r2
                                                          -> Data.Aeson.Types.Internal.Success
                                                               (Database.Persist.Class.PersistEntity.Key
                                                                  Model.Imagem,
                                                                GHC.Types.Int)
                                                               f2
                                                               r2
                                                          -> f2 r2) ->
                                                tpl)
                                                 `cast`
                                               (<forall (f2 :: * -> *) r2.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f2 r2
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (Database.Persist.Class.PersistEntity.Key
                                                         Model.Imagem,
                                                       GHC.Types.Int)
                                                      f2
                                                      r2
                                                 -> f2 r2>_R
                                                ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                              <(Database.Persist.Class.PersistEntity.Key
                                                                  Model.Imagem,
                                                                GHC.Types.Int)>_R))
                                               (\ @ (f2 :: * -> *)
                                                  @ r2
                                                  (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                  (_kf :: Data.Aeson.Types.Internal.Failure f2 r2)
                                                  (ks2 :: Data.Aeson.Types.Internal.Success
                                                            (Database.Persist.Class.PersistEntity.Key
                                                               Model.Imagem,
                                                             GHC.Types.Int)
                                                            f2
                                                            r2) ->
                                                ks2 a3))
                                            @ f1
                                            @ r1
                                            path1
                                            kf1
                                            ks1)))
                                   @ f
                                   @ r
                                   path
                                   kf
                                   ks)) }))
                  (Data.Aeson.Types.FromJSON.$fFromJSON(,)_$cparseJSONList
                     @ (Database.Persist.Class.PersistEntity.Key Model.Imagem)
                     @ GHC.Types.Int
                     Model.$fFromJSONKey0
                     Data.Aeson.Types.FromJSON.$fFromJSONInt) -}
7098c734b50e61c7b641344a81fbe8ce
  $s$fFromJSON(,)1 ::
    Data.Aeson.Types.FromJSON.FromJSON (GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Int)
                  (GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (Data.Aeson.Types.Internal.Array
                        -> Data.Aeson.Types.Internal.Parser (GHC.Types.Int, GHC.Types.Int))
                     @ (Data.Aeson.Types.Internal.Value
                        -> Data.Aeson.Types.Internal.Parser (GHC.Types.Int, GHC.Types.Int))
                     (Data.Aeson.Types.FromJSON.withArray
                        @ (GHC.Types.Int, GHC.Types.Int)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "(a, b)"#)))
                     (\ (t :: Data.Aeson.Types.Internal.Array) ->
                      let {
                        n :: GHC.Types.Int
                        = Data.Vector.Fusion.Util.unId
                            @ GHC.Types.Int
                            (Data.Vector.Fusion.Bundle.Monadic.length
                               @ Data.Vector.Fusion.Util.Id
                               @ Data.Vector.Vector
                               @ Data.Aeson.Types.Internal.Value
                               Data.Vector.Fusion.Util.$fMonadId
                               (Data.Vector.Fusion.Bundle.Monadic.fromVector
                                  @ Data.Vector.Fusion.Util.Id
                                  @ Data.Vector.Vector
                                  @ Data.Aeson.Types.Internal.Value
                                  Data.Vector.Fusion.Util.$fMonadId
                                  (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                                  t))
                      } in
                      case GHC.Classes.eqInt n (GHC.Types.I# 2#) of wild {
                        GHC.Types.False
                        -> GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Base.String
                             @ (Data.Aeson.Types.Internal.Parser (GHC.Types.Int, GHC.Types.Int))
                             (Data.Aeson.Types.Internal.$fMonadFailParser_$cfail
                                @ (GHC.Types.Int, GHC.Types.Int))
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b1
                                   (c :: GHC.Types.Char -> b1 -> b1)[OneShot]
                                   (n1 :: b1)[OneShot] ->
                                 GHC.CString.unpackFoldrCString#
                                   @ b1
                                   "cannot unpack array of length "#
                                   c
                                   (GHC.Base.foldr
                                      @ GHC.Types.Char
                                      @ b1
                                      c
                                      (GHC.CString.unpackFoldrCString#
                                         @ b1
                                         " into a tuple of length 2"#
                                         c
                                         n1)
                                      (GHC.Show.$fShowInt_$cshow n))))
                        GHC.Types.True
                        -> let {
                             d :: Data.Aeson.Types.Internal.Parser GHC.Types.Int
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Types.Int
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON5
                                 (GHC.Types.I# 0#)
                                 t
                           } in
                           let {
                             d1 :: Data.Aeson.Types.Internal.Parser
                                     (GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int))
                               {- Arity: 3 -}
                             = Data.Aeson.Types.FromJSON.$fFromJSON(,)_$s<$>
                                 @ GHC.Types.Int
                                 @ (GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int))
                                 (GHC.Tuple.(,) @ GHC.Types.Int @ GHC.Types.Int)
                                 d
                           } in
                           let {
                             e :: Data.Aeson.Types.Internal.Parser GHC.Types.Int
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Types.Int
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON5
                                 (GHC.Types.I# 1#)
                                 t
                           } in
                           GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (forall (f :: * -> *) r.
                                Data.Aeson.Types.Internal.JSONPath
                                -> Data.Aeson.Types.Internal.Failure f r
                                -> Data.Aeson.Types.Internal.Success
                                     (GHC.Types.Int, GHC.Types.Int) f r
                                -> f r)
                             @ (Data.Aeson.Types.Internal.Parser (GHC.Types.Int, GHC.Types.Int))
                             (\ (tpl :: forall (f :: * -> *) r.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f r
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Types.Int, GHC.Types.Int) f r
                                        -> f r) ->
                              tpl)
                               `cast`
                             (<forall (f :: * -> *) r.
                               Data.Aeson.Types.Internal.JSONPath
                               -> Data.Aeson.Types.Internal.Failure f r
                               -> Data.Aeson.Types.Internal.Success
                                    (GHC.Types.Int, GHC.Types.Int) f r
                               -> f r>_R
                              ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                            <(GHC.Types.Int, GHC.Types.Int)>_R))
                             (\ @ (f :: * -> *)
                                @ r
                                (path :: Data.Aeson.Types.Internal.JSONPath)
                                (kf :: Data.Aeson.Types.Internal.Failure f r)
                                (ks :: Data.Aeson.Types.Internal.Success
                                         (GHC.Types.Int, GHC.Types.Int) f r) ->
                              Data.Aeson.Types.Internal.runParser
                                @ (GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int))
                                d1
                                @ f
                                @ r
                                path
                                kf
                                (\ (a1 :: GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int)) ->
                                 Data.Aeson.Types.Internal.runParser
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   (GHC.Base.$
                                      @ 'GHC.Types.PtrRepLifted
                                      @ (forall (f1 :: * -> *) r1.
                                         Data.Aeson.Types.Internal.JSONPath
                                         -> Data.Aeson.Types.Internal.Failure f1 r1
                                         -> Data.Aeson.Types.Internal.Success
                                              (GHC.Types.Int, GHC.Types.Int) f1 r1
                                         -> f1 r1)
                                      @ (Data.Aeson.Types.Internal.Parser
                                           (GHC.Types.Int, GHC.Types.Int))
                                      (\ (tpl :: forall (f1 :: * -> *) r1.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f1 r1
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Types.Int, GHC.Types.Int) f1 r1
                                                 -> f1 r1) ->
                                       tpl)
                                        `cast`
                                      (<forall (f1 :: * -> *) r1.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f1 r1
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Types.Int, GHC.Types.Int) f1 r1
                                        -> f1 r1>_R
                                       ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                     <(GHC.Types.Int, GHC.Types.Int)>_R))
                                      (\ @ (f1 :: * -> *)
                                         @ r1
                                         (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                         (kf1 :: Data.Aeson.Types.Internal.Failure f1 r1)
                                         (ks1 :: Data.Aeson.Types.Internal.Success
                                                   (GHC.Types.Int, GHC.Types.Int) f1 r1) ->
                                       Data.Aeson.Types.Internal.runParser
                                         @ GHC.Types.Int
                                         e
                                         @ f1
                                         @ r1
                                         path1
                                         kf1
                                         (\ (a2 :: GHC.Types.Int) ->
                                          let {
                                            a3 :: (GHC.Types.Int, GHC.Types.Int) = a1 a2
                                          } in
                                          Data.Aeson.Types.Internal.runParser
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall (f2 :: * -> *) r2.
                                                  Data.Aeson.Types.Internal.JSONPath
                                                  -> Data.Aeson.Types.Internal.Failure f2 r2
                                                  -> Data.Aeson.Types.Internal.Success
                                                       (GHC.Types.Int, GHC.Types.Int) f2 r2
                                                  -> f2 r2)
                                               @ (Data.Aeson.Types.Internal.Parser
                                                    (GHC.Types.Int, GHC.Types.Int))
                                               (\ (tpl :: forall (f2 :: * -> *) r2.
                                                          Data.Aeson.Types.Internal.JSONPath
                                                          -> Data.Aeson.Types.Internal.Failure f2 r2
                                                          -> Data.Aeson.Types.Internal.Success
                                                               (GHC.Types.Int, GHC.Types.Int) f2 r2
                                                          -> f2 r2) ->
                                                tpl)
                                                 `cast`
                                               (<forall (f2 :: * -> *) r2.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f2 r2
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Types.Int, GHC.Types.Int) f2 r2
                                                 -> f2 r2>_R
                                                ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                              <(GHC.Types.Int, GHC.Types.Int)>_R))
                                               (\ @ (f2 :: * -> *)
                                                  @ r2
                                                  (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                  (_kf :: Data.Aeson.Types.Internal.Failure f2 r2)
                                                  (ks2 :: Data.Aeson.Types.Internal.Success
                                                            (GHC.Types.Int, GHC.Types.Int) f2 r2) ->
                                                ks2 a3))
                                            @ f1
                                            @ r1
                                            path1
                                            kf1
                                            ks1)))
                                   @ f
                                   @ r
                                   path
                                   kf
                                   ks)) }))
                  (Data.Aeson.Types.FromJSON.$fFromJSON(,)_$cparseJSONList
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     Data.Aeson.Types.FromJSON.$fFromJSONInt
                     Data.Aeson.Types.FromJSON.$fFromJSONInt) -}
85292b9c6dee2c214a076666b39b21b1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Handler.Curtida.$trModule2
                   Handler.Curtida.$trModule1) -}
0fd63620e085bcb3c645dcedf428292b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Handler.Curtida"#) -}
8e04ebc445a305fbb9a29965aa66805e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "aulahaskell-0.0.0-LoUslvgBjWU1RbrXO1tmnM"#) -}
62e7e205fe2cc7f23a89f873ba760e51
  deleteRemoveCurtidaR ::
    Model.CurtidaId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Curtida.deleteRemoveCurtidaR1
                  `cast`
                (<Model.CurtidaId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
0da6bf889585030e7fdc60de76b49557
  deleteRemoveCurtidaR1 ::
    Model.CurtidaId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (uid :: Model.CurtidaId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Curtida.deleteRemoveCurtidaR10
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistApp1
                        @ Model.Curtida
                        (Handler.Curtida.deleteRemoveCurtidaR9 uid)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <Model.Curtida>_N)_R
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistApp1
                        @ ()
                        (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cdelete
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ Model.Curtida
                           (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                           Handler.Curtida.deleteRemoveCurtidaR7
                             `cast`
                           (GHC.Classes.(%,%)
                              <Database.Persist.Class.PersistEntity.PersistEntity
                                 Model.Curtida>_N
                              ((Data.Type.Equality.~)
                                 <*>_N
                                 (Sym (Model.D:R:PersistEntityBackendCurtida[0]))
                                 (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                           uid)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <()>_N)_R
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   Handler.Curtida.deleteRemoveCurtidaR2
                   ipv4 } } }) -}
76a446faff3af08bcc7e5c47c4d3c0d4
  deleteRemoveCurtidaR10 :: Foundation.Handler ()
  {- Unfolding: (Handler.Funcs.anyOriginIn
                   Handler.Curtida.deleteRemoveCurtidaR11) -}
e2b81657e0af15083572ee00ed16125e
  deleteRemoveCurtidaR11 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.OPTIONS
                   Handler.Curtida.deleteRemoveCurtidaR12) -}
860c17bb4a0fda7beee3d5e8891a8b9d
  deleteRemoveCurtidaR12 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.DELETE
                   (GHC.Types.[] @ Handler.Funcs.HttpMethod)) -}
c41104a8129463167a1b7a1ad450ae5f
  deleteRemoveCurtidaR2 :: GHC.Exception.SomeException
  {- Unfolding: (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                   Handler.Curtida.deleteRemoveCurtidaR3) -}
bbf6947766f2fc1f680090a1591c5427
  deleteRemoveCurtidaR3 :: Yesod.Core.Types.HandlerContents
  {- Unfolding: (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv ipv1 ipv2 ipv3 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        Handler.Curtida.deleteRemoveCurtidaR4
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 case (Data.Aeson.Encoding.Builder.encodeToBuilder
                         (Data.Aeson.Types.Internal.Object dt1))
                        `cast`
                      (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                 Yesod.Core.Types.HCContent
                   Network.HTTP.Types.Status.status200
                   (Yesod.Core.Types.TypedContent
                      dt
                      (Yesod.Core.Types.ContentBuilder
                         nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                         (GHC.Base.Nothing @ GHC.Types.Int))) } } }) -}
5f9e093cd19b6dfb0f003dbaeb8f6a7f
  deleteRemoveCurtidaR4 :: [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   Handler.Curtida.deleteRemoveCurtidaR5
                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)) -}
00856d8d6ec9e92b0a41be59e83830db
  deleteRemoveCurtidaR5 ::
    (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
  {- Unfolding: ((Handler.Curtida.deleteRemoveCurtidaR6,
                  Data.Aeson.Types.Internal.emptyArray)) -}
f743be604c9cb050e1ea44aba737fbb5
  deleteRemoveCurtidaR6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "resp"#) -}
7b611b830344e9214719c8102c9110f9
  deleteRemoveCurtidaR7 ::
    (Database.Persist.Class.PersistEntity.PersistEntity Model.Curtida,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Model.$fPersistEntityCurtida,
                  Handler.Curtida.deleteRemoveCurtidaR8
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
1862cf950560ccb12cf5447afe9bab41
  deleteRemoveCurtidaR8 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
97f52bd3bbde666834b2ed325e39a4bd
  deleteRemoveCurtidaR9 ::
    Database.Persist.Class.PersistEntity.Key Model.Curtida
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         Model.Curtida
  {- Unfolding: (Yesod.Persist.Core.get404
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Model.Curtida
                   (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                   Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend
                   Handler.Curtida.deleteRemoveCurtidaR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Model.Curtida>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendCurtida[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
e534defebe5cdbe682f66132c2944a50
  getNumeroCurtidasR ::
    Model.CurtidaId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Curtida.getNumeroCurtidasR1
                  `cast`
                (<Model.CurtidaId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
7751b389fdb4e112af1debadbb844f63
  getNumeroCurtidasR1 ::
    Model.CurtidaId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (uid :: Model.CurtidaId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Curtida.optionsInsereCurtidaR
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistApp1
                        @ Model.Curtida
                        (Handler.Curtida.deleteRemoveCurtidaR9 uid)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <Model.Curtida>_N)_R
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Model.Curtida)))
                   = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                       @ Model.Curtida
                       @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                       @ GHC.Types.IO
                       Handler.Curtida.deleteRemoveCurtidaR7
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity
                             Model.Curtida>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Model.D:R:PersistEntityBackendCurtida[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                       Control.Monad.IO.Class.$fMonadIOIO
                       (GHC.Types.:
                          @ (Database.Persist.Class.PersistEntity.Filter Model.Curtida)
                          (Database.Persist.Class.PersistEntity.Filter
                             @ Model.Curtida
                             @ Model.CurtidaId
                             Model.$fPersistFieldKey
                             Model.$fPersistEntityCurtida_$s$WCurtidaId
                             (Data.Either.Left @ Model.CurtidaId @ [Model.CurtidaId] uid)
                             Database.Persist.Types.Base.Eq)
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter Model.Curtida)))
                       Handler.Curtida.getNumeroCurtidasR2
                 } in
                 case Foundation.$fYesodPersistApp1
                        @ (GHC.Base.Maybe
                             (Database.Persist.Class.PersistEntity.Entity Model.Curtida))
                        (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                         let {
                           ds :: Yesod.Core.Types.HandlerT
                                   Foundation.App
                                   GHC.Types.IO
                                   (Data.Acquire.Internal.Acquire
                                      (Data.Conduit.Internal.Conduit.Source
                                         GHC.Types.IO
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Model.Curtida)))
                           = m1
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <Data.Acquire.Internal.Acquire
                                     (Data.Conduit.Internal.Conduit.Source
                                        GHC.Types.IO
                                        (Database.Persist.Class.PersistEntity.Entity
                                           Model.Curtida))>_N)
                               r1
                         } in
                         (\ (r :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (ds
                                  `cast`
                                (Yesod.Core.Types.N:HandlerT[0]
                                     <Foundation.App>_N
                                     <GHC.Types.IO>_N
                                     <Data.Acquire.Internal.Acquire
                                        (Data.Conduit.Internal.Conduit.Source
                                           GHC.Types.IO
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Model.Curtida))>_N)
                                  r)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.Acquire.Internal.Acquire
                                       (Data.Conduit.Internal.Conduit.Source
                                          GHC.Types.IO
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Model.Curtida))>_R)
                                 s of ds3 { (#,#) ipv4 ipv5 ->
                          (Data.Acquire.Internal.with
                             @ GHC.Types.IO
                             @ (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Model.Curtida))
                             @ (GHC.Base.Maybe
                                  (Database.Persist.Class.PersistEntity.Entity Model.Curtida))
                             Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                             ipv5
                             (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend1
                                @ Model.Curtida)
                               `cast`
                             (<Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Model.Curtida)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <GHC.Base.Maybe
                                               (Database.Persist.Class.PersistEntity.Entity
                                                  Model.Curtida)>_R)))
                            `cast`
                          (GHC.Types.N:IO[0]
                               <GHC.Base.Maybe
                                  (Database.Persist.Class.PersistEntity.Entity Model.Curtida)>_R)
                            ipv4 })
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <GHC.Base.Maybe
                                                (Database.Persist.Class.PersistEntity.Entity
                                                   Model.Curtida)>_R))
                              (Sym (Yesod.Core.Types.N:HandlerT[0]
                                        <Foundation.App>_N
                                        <GHC.Types.IO>_N
                                        <GHC.Base.Maybe
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Model.Curtida)>_N))))
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <GHC.Base.Maybe
                                     (Database.Persist.Class.PersistEntity.Entity
                                        Model.Curtida)>_N))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv6 ipv7 ipv8 ipv9 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Handler.Curtida.deleteRemoveCurtidaR6,
                                  case ipv5 of wild {
                                    GHC.Base.Nothing -> Data.Aeson.Types.Internal.Null
                                    GHC.Base.Just a1 -> Model.$fToJSONEntity_$ctoJSON a1 })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv4 } } }) -}
82a401f155580f0657a95faf7c44b0a4
  getNumeroCurtidasR2 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Model.Curtida]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt Model.Curtida)
                   (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend5
                      @ Model.Curtida)
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Model.Curtida))) -}
c71d4ebb54ac1b9acdbcd88f5dd72140
  optionsBuscaCurtidaPorImagemR :: Foundation.Handler ()
  {- Unfolding: (Handler.Funcs.anyOriginIn
                   Handler.Curtida.optionsBuscaCurtidaPorImagemR1) -}
c8323905ca70976a33db22ce17af3855
  optionsBuscaCurtidaPorImagemR1 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.OPTIONS
                   Handler.Curtida.optionsBuscaCurtidaPorImagemR2) -}
357c0b8e3e5754d24e65d25ab01df446
  optionsBuscaCurtidaPorImagemR2 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.POST
                   (GHC.Types.[] @ Handler.Funcs.HttpMethod)) -}
a3b9c8a77ca95dbe3dd7bc8bc5b54fc1
  optionsCurteImagemR :: Model.CurtidaId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (uid :: Model.CurtidaId) ->
                 Handler.Curtida.optionsCurteImagemR1) -}
e3e0ef833662660bd9a4fc93aa528fcd
  optionsCurteImagemR1 :: Foundation.Handler ()
  {- Unfolding: (Handler.Funcs.anyOriginIn
                   Handler.Curtida.optionsCurteImagemR2) -}
88290906f677fc410f40d8aae058511d
  optionsCurteImagemR2 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.OPTIONS
                   Handler.Curtida.optionsCurteImagemR3) -}
44118183b8e24b79b1c71a95cfe072ba
  optionsCurteImagemR3 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.PATCH
                   (GHC.Types.[] @ Handler.Funcs.HttpMethod)) -}
345635bab10c1d69fb4d47f382c2910b
  optionsDescurteImagemR :: Model.CurtidaId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (uid :: Model.CurtidaId) ->
                 Handler.Curtida.optionsCurteImagemR1) -}
d4ad776f1fcbe75c405c712a1916884d
  optionsInsereCurtidaR :: Foundation.Handler ()
  {- Unfolding: (Handler.Funcs.anyOriginIn
                   Handler.Curtida.optionsInsereCurtidaR1) -}
b3eaa164fe89df96dc4f4f2c11ad833f
  optionsInsereCurtidaR1 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.OPTIONS
                   Handler.Curtida.optionsInsereCurtidaR2) -}
7242e0fcfbbd778e354311cc738a2a10
  optionsInsereCurtidaR2 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.GET
                   (GHC.Types.[] @ Handler.Funcs.HttpMethod)) -}
22c726c29c4ce3875de8095578f397fd
  optionsNumeroCurtidasR :: Model.CurtidaId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (uid :: Model.CurtidaId) ->
                 Handler.Curtida.optionsInsereCurtidaR) -}
cacf1ffa434367947cc0d511029461e5
  optionsRemoveCurtidaR :: Model.CurtidaId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (uid :: Model.CurtidaId) ->
                 Handler.Curtida.deleteRemoveCurtidaR10) -}
6f8e3421fabdaf87577ec1142837539d
  patchCurteImagemR ::
    Model.CurtidaId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Curtida.patchCurteImagemR1
                  `cast`
                (<Model.CurtidaId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
51c274da965b8d59198eeae56652f9ca
  patchCurteImagemR1 ::
    Model.CurtidaId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (uid :: Model.CurtidaId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Curtida.optionsCurteImagemR1
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Handler.Curtida.patchCurteImagemR9
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <(GHC.Types.Int, GHC.Types.Int)>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <(GHC.Types.Int, GHC.Types.Int)>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) valor ds ->
                 case ds of wild1 { GHC.Types.I# ds3 ->
                 case ds3 of ds4 {
                   DEFAULT
                   -> case Handler.Curtida.patchCurteImagemR8
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Aeson.Types.Internal.Value #)
                      of {}
                   1#
                   -> case Foundation.$fYesodPersistApp1
                             @ Model.Curtida
                             (Handler.Curtida.deleteRemoveCurtidaR9 uid)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                                <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                <Model.Curtida>_N)_R
                             eta
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      case Foundation.$fYesodPersistApp1
                             @ ()
                             (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cupdate
                                @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                                @ Model.Curtida
                                (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                                Handler.Curtida.deleteRemoveCurtidaR7
                                  `cast`
                                (GHC.Classes.(%,%)
                                   <Database.Persist.Class.PersistEntity.PersistEntity
                                      Model.Curtida>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Model.D:R:PersistEntityBackendCurtida[0]))
                                      (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                                uid
                                (GHC.Types.:
                                   @ (Database.Persist.Class.PersistEntity.Update Model.Curtida)
                                   (Database.Persist.Class.PersistEntity.Update
                                      @ Model.Curtida
                                      @ GHC.Types.Int
                                      Database.Persist.Class.PersistField.$fPersistFieldInt
                                      Handler.Curtida.patchCurteImagemR7
                                        `cast`
                                      (Sym (Model.D:R:EntityFieldCurtidatyp0[0]) <GHC.Types.Int>_N)
                                      valor
                                      Database.Persist.Types.Base.Assign)
                                   (GHC.Types.[]
                                      @ (Database.Persist.Class.PersistEntity.Update
                                           Model.Curtida))))
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                                <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                <()>_N)_R
                             eta
                             ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                      GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ Data.Aeson.Types.Internal.Value
                        Handler.Curtida.patchCurteImagemR2
                        ipv6 } } } } } } }) -}
d0a14f8c61882d59dd49caa6ca768b4a
  patchCurteImagemR2 :: GHC.Exception.SomeException
  {- Unfolding: (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                   Handler.Curtida.patchCurteImagemR3) -}
a8461df1929f70ad778d6063cccd5de1
  patchCurteImagemR3 :: Yesod.Core.Types.HandlerContents
  {- Unfolding: (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv ipv1 ipv2 ipv3 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        Handler.Curtida.patchCurteImagemR4
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 case (Data.Aeson.Encoding.Builder.encodeToBuilder
                         (Data.Aeson.Types.Internal.Object dt1))
                        `cast`
                      (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                 Yesod.Core.Types.HCContent
                   Network.HTTP.Types.Status.status200
                   (Yesod.Core.Types.TypedContent
                      dt
                      (Yesod.Core.Types.ContentBuilder
                         nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                         (GHC.Base.Nothing @ GHC.Types.Int))) } } }) -}
fed795b5bf907fa98c2d6ff07bf3d35f
  patchCurteImagemR4 :: [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   Handler.Curtida.patchCurteImagemR5
                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)) -}
0c95659b8d13cf8460a246ef497e7c9d
  patchCurteImagemR5 ::
    (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
  {- Unfolding: ((Handler.Curtida.deleteRemoveCurtidaR6,
                  Handler.Curtida.patchCurteImagemR6)) -}
0768a6aceb3fc96cd33201f3e7f33dec
  patchCurteImagemR6 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Sucesso"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
1463fd8abf7d0a30ff0667f4856b9410
  patchCurteImagemR7 :: Model.R:EntityFieldCurtidatyp GHC.Types.Int
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Model.CurtidaPositivas
                   @ GHC.Types.Int
                   Handler.Curtida.$s$WCurtidaNegativas2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Int>_N <GHC.Types.Int>_N)) -}
2131e652b541b2cc64bf3b674625bc98
  patchCurteImagemR8 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Data.Aeson.Types.Internal.Value
  {- Strictness: x -}
74b8703a57c1498af0f3ebf935bfd945
  patchCurteImagemR9 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ (GHC.Types.Int, GHC.Types.Int)
                   (Yesod.Auth.defaultMaybeAuthId_$s$fMonadHandlerHandlerT
                      @ Foundation.App)
                   Handler.Curtida.$s$fFromJSON(,)1) -}
fad928d959e7c31850bee0df3457b821
  patchDescurteImagemR ::
    Model.CurtidaId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Curtida.patchDescurteImagemR1
                  `cast`
                (<Model.CurtidaId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
7d1a67477d4ed71a28ae3d376b25e867
  patchDescurteImagemR1 ::
    Model.CurtidaId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (uid :: Model.CurtidaId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Curtida.optionsCurteImagemR1
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Handler.Curtida.patchCurteImagemR9
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <(GHC.Types.Int, GHC.Types.Int)>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <(GHC.Types.Int, GHC.Types.Int)>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) valor ds ->
                 case ds of wild1 { GHC.Types.I# ds3 ->
                 case ds3 of ds4 {
                   DEFAULT
                   -> case Handler.Curtida.patchDescurteImagemR3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Aeson.Types.Internal.Value #)
                      of {}
                   1#
                   -> case Foundation.$fYesodPersistApp1
                             @ Model.Curtida
                             (Handler.Curtida.deleteRemoveCurtidaR9 uid)
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                                <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                <Model.Curtida>_N)_R
                             eta
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      case Foundation.$fYesodPersistApp1
                             @ ()
                             (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cupdate
                                @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                                @ Model.Curtida
                                (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                                Handler.Curtida.deleteRemoveCurtidaR7
                                  `cast`
                                (GHC.Classes.(%,%)
                                   <Database.Persist.Class.PersistEntity.PersistEntity
                                      Model.Curtida>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Model.D:R:PersistEntityBackendCurtida[0]))
                                      (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                                uid
                                (GHC.Types.:
                                   @ (Database.Persist.Class.PersistEntity.Update Model.Curtida)
                                   (Database.Persist.Class.PersistEntity.Update
                                      @ Model.Curtida
                                      @ GHC.Types.Int
                                      Database.Persist.Class.PersistField.$fPersistFieldInt
                                      Handler.Curtida.patchDescurteImagemR2
                                        `cast`
                                      (Sym (Model.D:R:EntityFieldCurtidatyp0[0]) <GHC.Types.Int>_N)
                                      valor
                                      Database.Persist.Types.Base.Assign)
                                   (GHC.Types.[]
                                      @ (Database.Persist.Class.PersistEntity.Update
                                           Model.Curtida))))
                               `cast`
                             (Control.Monad.Trans.Reader.ReaderT
                                <*>_N
                                (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                                <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                <()>_N)_R
                             eta
                             ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                      GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ Data.Aeson.Types.Internal.Value
                        Handler.Curtida.patchCurteImagemR2
                        ipv6 } } } } } } }) -}
b3b16111deb4ec4991064dd8b1c1a419
  patchDescurteImagemR2 ::
    Model.R:EntityFieldCurtidatyp GHC.Types.Int
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Model.CurtidaNegativas
                   @ GHC.Types.Int
                   Handler.Curtida.$s$WCurtidaNegativas2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <GHC.Types.Int>_N <GHC.Types.Int>_N)) -}
d9c5720d43cda8c8430c31d889b4b1b0
  patchDescurteImagemR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Data.Aeson.Types.Internal.Value
  {- Strictness: x -}
759cb3bfbd29462d579cd4c6d1d6daad
  postBuscaCurtidaPorImagemR ::
    Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Curtida.postBuscaCurtidaPorImagemR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Data.Aeson.Types.Internal.Value>_N))) -}
4310cee521c532b634280ade356fda65
  postBuscaCurtidaPorImagemR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Curtida.optionsBuscaCurtidaPorImagemR
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Handler.Curtida.postBuscaCurtidaPorImagemR_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <(Model.ImagemId, GHC.Types.Int)>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <(Model.ImagemId, GHC.Types.Int)>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) imagem ds ->
                 case ds of wild1 { GHC.Types.I# ds3 ->
                 case ds3 of ds4 {
                   DEFAULT
                   -> case Handler.Curtida.postBuscaCurtidaPorImagemR3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Aeson.Types.Internal.Value #)
                      of {}
                   1#
                   -> let {
                        m1 :: Control.Monad.Trans.Reader.ReaderT
                                Database.Persist.Sql.Types.Internal.SqlBackend
                                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                                (Data.Acquire.Internal.Acquire
                                   (Data.Conduit.Internal.Conduit.Source
                                      GHC.Types.IO
                                      (Database.Persist.Class.PersistEntity.Entity Model.Curtida)))
                        = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                            @ Model.Curtida
                            @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                            @ GHC.Types.IO
                            Handler.Curtida.deleteRemoveCurtidaR7
                              `cast`
                            (GHC.Classes.(%,%)
                               <Database.Persist.Class.PersistEntity.PersistEntity
                                  Model.Curtida>_N
                               ((Data.Type.Equality.~)
                                  <*>_N
                                  (Sym (Model.D:R:PersistEntityBackendCurtida[0]))
                                  (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                            (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                            Control.Monad.IO.Class.$fMonadIOIO
                            (GHC.Types.:
                               @ (Database.Persist.Class.PersistEntity.Filter Model.Curtida)
                               (Database.Persist.Class.PersistEntity.Filter
                                  @ Model.Curtida
                                  @ Model.ImagemId
                                  Model.$fPersistFieldKey0
                                  Handler.Curtida.postBuscaCurtidaPorImagemR2
                                    `cast`
                                  (Sym (Model.D:R:EntityFieldCurtidatyp0[0]) <Model.ImagemId>_N)
                                  (Data.Either.Left @ Model.ImagemId @ [Model.ImagemId] imagem)
                                  Database.Persist.Types.Base.Eq)
                               (GHC.Types.[]
                                  @ (Database.Persist.Class.PersistEntity.Filter Model.Curtida)))
                            (GHC.Types.[]
                               @ (Database.Persist.Class.PersistEntity.SelectOpt Model.Curtida))
                      } in
                      case Foundation.$fYesodPersistApp1
                             @ [Database.Persist.Class.PersistEntity.Entity Model.Curtida]
                             (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                              let {
                                ds5 :: Yesod.Core.Types.HandlerT
                                         Foundation.App
                                         GHC.Types.IO
                                         (Data.Acquire.Internal.Acquire
                                            (Data.Conduit.Internal.Conduit.Source
                                               GHC.Types.IO
                                               (Database.Persist.Class.PersistEntity.Entity
                                                  Model.Curtida)))
                                = m1
                                    `cast`
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                       <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                       <Data.Acquire.Internal.Acquire
                                          (Data.Conduit.Internal.Conduit.Source
                                             GHC.Types.IO
                                             (Database.Persist.Class.PersistEntity.Entity
                                                Model.Curtida))>_N)
                                    r1
                              } in
                              (\ (r :: Yesod.Core.Types.HandlerData
                                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                 (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               case (ds5
                                       `cast`
                                     (Yesod.Core.Types.N:HandlerT[0]
                                          <Foundation.App>_N
                                          <GHC.Types.IO>_N
                                          <Data.Acquire.Internal.Acquire
                                             (Data.Conduit.Internal.Conduit.Source
                                                GHC.Types.IO
                                                (Database.Persist.Class.PersistEntity.Entity
                                                   Model.Curtida))>_N)
                                       r)
                                      `cast`
                                    (GHC.Types.N:IO[0]
                                         <Data.Acquire.Internal.Acquire
                                            (Data.Conduit.Internal.Conduit.Source
                                               GHC.Types.IO
                                               (Database.Persist.Class.PersistEntity.Entity
                                                  Model.Curtida))>_R)
                                      s of ds6 { (#,#) ipv4 ipv5 ->
                               (Data.Acquire.Internal.with
                                  @ GHC.Types.IO
                                  @ (Data.Conduit.Internal.Conduit.Source
                                       GHC.Types.IO
                                       (Database.Persist.Class.PersistEntity.Entity Model.Curtida))
                                  @ [Database.Persist.Class.PersistEntity.Entity Model.Curtida]
                                  Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                                  ipv5
                                  (Database.Persist.Class.PersistQuery.selectList1 @ Model.Curtida)
                                    `cast`
                                  (<Data.Conduit.Internal.Conduit.Source
                                      GHC.Types.IO
                                      (Database.Persist.Class.PersistEntity.Entity Model.Curtida)>_R
                                   ->_R Sym (GHC.Types.N:IO[0]
                                                 <[Database.Persist.Class.PersistEntity.Entity
                                                     Model.Curtida]>_R)))
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity Model.Curtida]>_R)
                                 ipv4 })
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  <[Database.Persist.Class.PersistEntity.Entity
                                                      Model.Curtida]>_R))
                                   (Sym (Yesod.Core.Types.N:HandlerT[0]
                                             <Foundation.App>_N
                                             <GHC.Types.IO>_N
                                             <[Database.Persist.Class.PersistEntity.Entity
                                                 Model.Curtida]>_N))))
                               `cast`
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                       <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                       <[Database.Persist.Class.PersistEntity.Entity
                                           Model.Curtida]>_N))
                             eta
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ Data.Aeson.Types.Internal.Value
                        (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                           (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv6 ipv7 ipv8 ipv9 ->
                            case Data.Aeson.Types.Internal.$sfromList1
                                   @ Data.Aeson.Types.Internal.Value
                                   (GHC.Types.:
                                      @ Data.Aeson.Types.Internal.Pair
                                      (Handler.Curtida.deleteRemoveCurtidaR6,
                                       case GHC.Magic.runRW#
                                              @ 'GHC.Types.PtrRepLifted
                                              @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                              (\ (s1 :: GHC.Prim.State#
                                                          GHC.Prim.RealWorld)[OneShot] ->
                                               case GHC.Prim.newArray#
                                                      @ Data.Aeson.Types.Internal.Value
                                                      @ (Control.Monad.Primitive.PrimState
                                                           (GHC.ST.ST GHC.Prim.RealWorld))
                                                      0#
                                                      (Data.Vector.Mutable.uninitialised
                                                         @ Data.Aeson.Types.Internal.Value)
                                                      s1
                                                        `cast`
                                                      (GHC.Prim.State#
                                                         (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <GHC.Prim.RealWorld>_N)))_R of ds6 { (#,#) ipv10 ipv11 ->
                                               case Handler.Curtida.postBuscaCurtidaPorImagemR_$sfoldlM_loop
                                                      ipv10
                                                        `cast`
                                                      (GHC.Prim.State#
                                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N))_R
                                                      (GHC.Base.map
                                                         @ (Database.Persist.Class.PersistEntity.Entity
                                                              Model.Curtida)
                                                         @ Data.Aeson.Types.Internal.Value
                                                         Model.$fToJSONEntity_$ctoJSON
                                                         ipv5)
                                                      0#
                                                      0#
                                                      ipv11
                                                      @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                          (GHC.ST.ST
                                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N)
                                                      0# of ds7 { (#,#) ipv12 ipv13 ->
                                               case ipv13 of wild5 { (,) v' n ->
                                               case v'
                                                      `cast`
                                                    (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                               (GHC.ST.ST
                                                                                                  GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild2 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                               case n of dt5 { GHC.Types.I# dt6 ->
                                               case GHC.Prim.unsafeFreezeArray#
                                                      @ (Control.Monad.Primitive.PrimState
                                                           (GHC.ST.ST GHC.Prim.RealWorld))
                                                      @ Data.Aeson.Types.Internal.Value
                                                      dt3
                                                      ipv12
                                                        `cast`
                                                      (GHC.Prim.State#
                                                         (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <GHC.Prim.RealWorld>_N)))_R of ds8 { (#,#) ipv14 ipv15 ->
                                               (# ipv14
                                                    `cast`
                                                  (GHC.Prim.State#
                                                     (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                          <GHC.Prim.RealWorld>_N))_R,
                                                  Data.Vector.Vector
                                                    @ Data.Aeson.Types.Internal.Value
                                                    dt1
                                                    dt6
                                                    ipv15 #) } } } } } }) of ds6 { (#,#) ipv10 ipv11 ->
                                       case ipv11 of dt1 { Data.Vector.Vector ipv12 ipv13 ipv14 ->
                                       Data.Aeson.Types.Internal.Array dt1 } })
                                      (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                   (Data.HashMap.Base.Empty
                                      @ Data.Text.Internal.Text
                                      @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                            case (Data.Aeson.Encoding.Builder.encodeToBuilder
                                    (Data.Aeson.Types.Internal.Object dt1))
                                   `cast`
                                 (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                            Yesod.Core.Types.HCContent
                              Network.HTTP.Types.Status.status200
                              (Yesod.Core.Types.TypedContent
                                 dt
                                 (Yesod.Core.Types.ContentBuilder
                                    nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                    (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                        ipv4 } } } } } }) -}
8b6c4306cad073b332ff65b8fbb6edf2
  postBuscaCurtidaPorImagemR2 ::
    Model.R:EntityFieldCurtidatyp Model.ImagemId
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Model.CurtidaImagemid
                   @ Model.ImagemId
                   Handler.Curtida.$s$WCurtidaImagemid2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Model.Imagem>_N <Database.Persist.Class.PersistEntity.Key
                                                          Model.Imagem>_N)) -}
e3b3a77a417f0cc377aacece0c91ba78
  postBuscaCurtidaPorImagemR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Data.Aeson.Types.Internal.Value
  {- Strictness: x -}
09d915e22748d326c5b63a7e7d2e4429
  postBuscaCurtidaPorImagemR_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Data.Aeson.Types.Internal.Value,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
e4e4ca20401b9e7a4dc86cedf1ca80af
  postBuscaCurtidaPorImagemR_ds ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO (Model.ImagemId, GHC.Types.Int)
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ (Model.ImagemId, GHC.Types.Int)
                   (Yesod.Auth.defaultMaybeAuthId_$s$fMonadHandlerHandlerT
                      @ Foundation.App)
                   Handler.Curtida.$s$fFromJSON(,)) -}
d80db1f02846b5cd1ba74839fa496993
  postInsereCurtidaR ::
    Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Curtida.postInsereCurtidaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Data.Aeson.Types.Internal.Value>_N))) -}
83470aa9c92c51e32b7f4f34c12aad42
  postInsereCurtidaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Curtida.optionsBuscaCurtidaPorImagemR
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Handler.Curtida.postInsereCurtidaR_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <Model.Curtida>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <Model.Curtida>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistApp1
                        @ (Database.Persist.Class.PersistEntity.Key Model.Curtida)
                        (Handler.Curtida.postInsereCurtidaR2 ipv3)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <Database.Persist.Class.PersistEntity.Key Model.Curtida>_N)_R
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv6 ipv7 ipv8 ipv9 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Handler.Curtida.deleteRemoveCurtidaR6,
                                  case ipv5
                                         `cast`
                                       (Trans
                                            (Model.D:R:KeyCurtida0[0])
                                            (Trans
                                                 (Model.N:R:KeyCurtida[0])
                                                 (Trans
                                                      (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                      (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of wild { GHC.Int.I64# x# ->
                                  case GHC.Integer.Type.smallInteger x# of dt1 { DEFAULT ->
                                  Data.Aeson.Types.Internal.Number
                                    (Data.Scientific.Scientific dt1 0#) } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status201
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv4 } } }) -}
7a71ec299fc6d98faadbb5ee6d043424
  postInsereCurtidaR2 ::
    Model.Curtida
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Model.Curtida)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Model.Curtida
                   (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                   Handler.Curtida.deleteRemoveCurtidaR7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Model.Curtida>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendCurtida[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
2e7c953c3afb03bfeee9e7f5152c5b17
  postInsereCurtidaR_ds ::
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO Model.Curtida
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Model.Curtida
                   (Yesod.Auth.defaultMaybeAuthId_$s$fMonadHandlerHandlerT
                      @ Foundation.App)
                   Model.$fFromJSONCurtida) -}
"SPEC/Handler.Curtida $fFromJSON(,) @ (Key Imagem) @ Int" [ALWAYS] forall ($dFromJSON1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                            GHC.Types.Int)
                                                                          ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                           (Database.Persist.Class.PersistEntity.Key
                                                                                              Model.Imagem))
  Data.Aeson.Types.FromJSON.$fFromJSON(,) @ (Database.Persist.Class.PersistEntity.Key
                                               Model.Imagem)
                                          @ GHC.Types.Int
                                          $dFromJSON
                                          $dFromJSON1
  = Handler.Curtida.$s$fFromJSON(,)
"SPEC/Handler.Curtida $fFromJSON(,) @ Int @ Int" [ALWAYS] forall ($dFromJSON1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                   GHC.Types.Int)
                                                                 ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                  GHC.Types.Int)
  Data.Aeson.Types.FromJSON.$fFromJSON(,) @ GHC.Types.Int
                                          @ GHC.Types.Int
                                          $dFromJSON
                                          $dFromJSON1
  = Handler.Curtida.$s$fFromJSON(,)1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

