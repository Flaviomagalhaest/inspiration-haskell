
==================== FINAL INTERFACE ====================
2018-06-13 02:34:16.060228 UTC

interface aulahaskell-0.0.0-LoUslvgBjWU1RbrXO1tmnM:Handler.Jogada 8002
  interface hash: 4412e2537eddf9108f968d6d4187ee64
  ABI hash: 50d2b7e7f7fed2c31a5bff535e2dd49a
  export-list hash: 366dd6ba2c3de04cdad4c72cbe71755d
  orphan hash: 7610813d3555c7f0677648e0b496a78f
  flag hash: 6d73493edc0c8da032de4b3f8604d846
  sig of: Nothing
  used TH splices: False
  where
exports:
  Handler.Jogada.deleteExcluirjogadaR
  Handler.Jogada.getBusjogadasoR
  Handler.Jogada.getJogadaidR
  Handler.Jogada.getListarjogadaR
  Handler.Jogada.getListarjogadausuariopartidaidR
  Handler.Jogada.optionsBusjogadasoR
  Handler.Jogada.optionsExcluirjogadaR
  Handler.Jogada.optionsJogadaR
  Handler.Jogada.optionsJogadaidR
  Handler.Jogada.optionsListarjogadaR
  Handler.Jogada.optionsListarjogadausuariopartidaidR
  Handler.Jogada.postJogadaR
  Handler.Jogada.postJogadaidR
  Handler.Jogada.postListarjogadausuariopartidaidR
module dependencies: Foundation Handler.Funcs Import
                     Import.NoFoundation Model Settings Settings.StaticFiles
package dependencies: ReadArgs-1.2.3@ReadArgs-1.2.3-FZlTw1cmwFABXd9Qu17GpK
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      aeson-compat-0.3.6@aeson-compat-0.3.6-HFlClSgXxbU7TMoWqS5Yu4
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-CmDkwNPA51zjuzFcENFZ5
                      asn1-parse-0.9.4@asn1-parse-0.9.4-HSgo3I4Jg5sAQWRFdyScvb
                      asn1-types-0.3.2@asn1-types-0.3.2-Ls8owv2hbTfEqG1LKzBcjy
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-CiauZZhskHA6jYy7CqE2mZ
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-4E2p94lTx8gIceMhu8Kl9o
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw
                      basic-prelude-0.6.1.1@basic-prelude-0.6.1.1-888xsTDtS2CGSoHb1JadEF
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p
                      blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      chunked-data-0.3.0@chunked-data-0.3.0-OOunTfArGE2y1nE8RKgW4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-Iep5jMzxM1u3mGzM17Av1H
                      classy-prelude-1.2.0.1@classy-prelude-1.2.0.1-DI7QyZr6dYQLSGY5Zda29N
                      classy-prelude-conduit-1.2.0@classy-prelude-conduit-1.2.0-4VNoIEo9SLt6t7N4PwpkXU
                      classy-prelude-yesod-1.2.0@classy-prelude-yesod-1.2.0-4tCQqVxZHk5JE3z6jrBT3F
                      clientsession-0.9.1.2@clientsession-0.9.1.2-1HgInPlmxWUKWaagfkcDtu
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i
                      conduit-combinators-1.1.1@conduit-combinators-1.1.1-CbpWlJJbANPFWzQzUVNtDU
                      conduit-extra-1.1.17@conduit-extra-1.1.17-LHyPtC0nGlzDcgVxOcd4h4
                      connection-0.2.8@connection-0.2.8-7E5s9ndt8OF7NNDH3ifO8K
                      constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      cookie-0.4.2.1@cookie-0.4.2.1-ImqC1hbvUERAwQQgqhuUAD
                      cprng-aes-0.6.1@cprng-aes-0.6.1-CtFLLcV33ZSKCmRTVWdrW7
                      crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-JSCTZhqOXgH3EkiMgDwxX
                      crypto-random-0.0.9@crypto-random-0.0.9-381865WP41XFXsmS6fCaFj
                      cryptonite-0.23@cryptonite-0.23-7SwQljDtwztDJ3Fe01tUO9
                      cryptonite-conduit-0.2.0@cryptonite-conduit-0.2.0-LH1qspLlLTXKv70D84KCUO
                      css-text-0.1.2.2@css-text-0.1.2.2-GtPTSZ9vPefILuf2bXZD6W
                      data-default-0.7.1.1@data-default-0.7.1.1-Atv1ZD6t1rI1MrH9qSGaQC
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      dlist-instances-0.1.1.1@dlist-instances-0.1.1.1-JrfDmjAHlXKJeRjjD0rY07
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml
                      entropy-0.3.8@entropy-0.3.8-14HIw40nRRY968j6AdY1H4
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-7GMVhEi1femFXwSQxV5ynm
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hourglass-0.2.10@hourglass-0.2.10-pnbvWmzfcY1rOFETQEmcY
                      http-api-data-0.3.7.1@http-api-data-0.3.7.1-AT41KDpP9ayH63FPNXWrvF
                      http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q
                      http-client-tls-0.3.5.1@http-client-tls-0.3.5.1-9yHxBE9KmNa1D1xDvn7C4m
                      http-conduit-2.2.3.2@http-conduit-2.2.3.2-5MsxxcFsbFW2aX71Hx1I7R
                      http-date-0.0.6.1@http-date-0.0.6.1-AkYFHBFn90lGSerD29arC9
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      http2-1.6.3@http2-1.6.3-5WuWRsIVuKR43Sq9Cs2O4Z integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT
                      lifted-async-0.9.3@lifted-async-0.9.3-1Yr94BjFrURGjFULK2k39c
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-Ei0JSPdt7KOCD2HIA5jFqV
                      memory-0.14.8@memory-0.14.8-GdBguxykhKWC3gIuWq62O9
                      mime-types-0.1.0.7@mime-types-0.1.0.7-6b3z22GcDYZLEl2kkfCUAB
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      monad-unlift-0.2.0@monad-unlift-0.2.0-JaCplLBosjYCz9UWF6Saxw
                      mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV
                      mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R
                      mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      path-pieces-0.2.1@path-pieces-0.2.1-Ap205zdHJCr3aorBcPaHM5
                      pem-0.2.2@pem-0.2.2-CkEwei5500yF2642aAaOAi
                      persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n
                      persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS
                      pointed-5@pointed-5-GlRizu1aJXO3QG4Xelc8BV
                      postgresql-libpq-0.9.3.1@postgresql-libpq-0.9.3.1-PNtzTLZ1kPBlp0W2VWiJp
                      postgresql-simple-0.5.3.0@postgresql-simple-0.5.3.0-7wqiM7f7ESv7wSvmAjfLqt
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      process-1.4.3.0@process-1.4.3.0
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      psqueues-0.2.4.0@psqueues-0.2.4.0-CvAhEbuBRGQCwl61vq8zYS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-GmoeVeJ8L5Y51jMJ5dPk3U
                      resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      safe-exceptions-0.1.6.0@safe-exceptions-0.1.6.0-8HmohVTen8f1fXhFM1N1R3
                      say-0.1.0.0@say-0.1.0.0-4kg0VW7izQr10eu93ritVO
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      securemem-0.1.9@securemem-0.1.9-I1DISfcspndD6idpVbMBWq
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-4uYtK5a0djFILo2ePfLs47
                      skein-1.0.9.4@skein-1.0.9.4-H6iwU6ZhWxE28U4xCLTfo3
                      socks-0.5.5@socks-0.5.5-JArtPcFTnbCItWBjXwWAhO
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-6xuIA5RXrs65yyeq3HWIWP
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-HO0sHb651BeFnnIxljlexR
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      tls-1.3.11@tls-1.3.11-IxCmr8GdEutIrVRgKylzM6
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vault-0.3.0.7@vault-0.3.0.7-FSJCPczyPWW8DwvwP76qt4
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-1qlx0Hst1Fo5WZd0lT7Iw1
                      vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1
                      wai-3.2.1.1@wai-3.2.1.1-GYhAFGd1F2uKjCUZVPyC2C
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-IWVzgvpaMYRH5pqRQk33K1
                      wai-extra-3.0.20.0@wai-extra-3.0.20.0-Dj9t4P11I8BnwNE6pZcEP
                      wai-logger-2.3.0@wai-logger-2.3.0-G2LMsBpHwLV49tDfVWxzX4
                      warp-3.2.13@warp-3.2.13-FhWulh599WH9bUCGJnpWGc
                      word8-0.1.3@word8-0.1.3-9o1uWQQ6KysJq8GGsVHHit
                      x509-1.7.2@x509-1.7.2-IixRXIQfpHlXunpaQDNuQ
                      x509-store-1.6.5@x509-store-1.6.5-LPi8AM9vMZO97SZk6SmtWd
                      x509-system-1.6.6@x509-system-1.6.6-GUxFbyk0TndCMp8nKvvL3M
                      x509-validation-1.6.9@x509-validation-1.6.9-4jWSRkWS3kAKZsU0SpJst
                      xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx
                      xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-2Pr735gWMIKE1KECS4SIv1
                      yaml-0.8.23.3@yaml-0.8.23.3-C6ya2ht5lnU5AAyP9utctL
                      yesod-1.4.5@yesod-1.4.5-GDhOBR6sYcs6xIyNy56Max
                      yesod-auth-1.4.19@yesod-auth-1.4.19-Lis3qGCnpJgB8Xqabl9Sxo
                      yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V
                      yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU
                      yesod-newsfeed-1.6@yesod-newsfeed-1.6-FVeGFThDxmyHNMY2ecmTrZ
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc
                      yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Request
         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path.CurrentOS
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
         yesod-auth-1.4.19@yesod-auth-1.4.19-Lis3qGCnpJgB8Xqabl9Sxo:Yesod.Auth
family instance modules: adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         aulahaskell-0.0.0-LoUslvgBjWU1RbrXO1tmnM:Foundation
                         aulahaskell-0.0.0-LoUslvgBjWU1RbrXO1tmnM:Model
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Block.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.BoxedArray
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Monad
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.MutableBuilder
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.NonEmpty
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Numerical.Subtractive
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ASCII7
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF16
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF32
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.AsciiString
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.OffsetSize
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UArray.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UTF8.Base
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Conduit
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Pipe
                         constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB:Data.Constraint.Forall
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml:Text.Email.Parser
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Bitmap
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Buildable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Element
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Keyed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Mutable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Range
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT:Data.Key
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et:Control.Monad.Logger
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Containers
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.MonoTraversable
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.NonNull
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Sequences
                         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.BRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Class
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.DLList
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Deque
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.PRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.SRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.URef
                         mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph:Network.URI
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistConfig
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Internal.Css
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
                         xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT:Data.XML.Types
                         yesod-auth-1.4.19@yesod-auth-1.4.19-Lis3qGCnpJgB8Xqabl9Sxo:Yesod.Auth
                         yesod-auth-1.4.19@yesod-auth-1.4.19-Lis3qGCnpJgB8Xqabl9Sxo:Yesod.Auth.Routes
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Class.Handler
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Types
                         yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.Internal f040a64200abf1dfa06f5db9b9e027c1
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k:Data.Aeson.Types.ToJSON d8ae0f04da94d706b89336fd9d0bf43b
import  -/  Foundation b714689a521b95e931316742a15acf55
  Handler 58c8cee83409cba3c1b3ca4b499312c9
import  -/  Handler.Funcs 5067e629f175d9dc59bd743503577a0d
  exports: 50141f5034b38d0ecb0fcb0748e142c7
  DELETE 808d33abfdad3295feb5987c9cc44af3
  GET 6b4978b05c1cf220f05498c655eb8c62
  OPTIONS d16090caad0f6de85eec11595704dd14
  POST c24650d9609a6fd5ccf7d1fc1cc19b22
  anyOriginIn c86d4b6c44a9c242de90d0fc6b8c7122
import  -/  Import bf5845985ec25bc8b1370774445915d2
  exports: 30d19c105c9c3004ffd4b28728f5063f
import  -/  Model 7dcc4f9a44a63b8f1d2da8d0b43a4863
  Jogada b272d546059fef4997d4ce84124b56d6
  JogadaId c572551f180b6c0906284e0b9191a930
  JogadaId 0a8411089ecb9c98a9c5f4eaf97e7972
  JogadaLogin 45f59b0678d20fa8829a331f4eca16e0
  JogadaPartidaid 519efcbd0e8d33a4adcca4e4a3d6a655
  JogadaRodadaid 1d3f7f4906c85316b2c0c7b9bc89eb37
  PartidaId a7c89b53eef01470d3852fa12d3a25f5
  RodadaId af3d4a41d22417db85603328663b629b
  UsuarioId fc27fa034afc1784fb0db4a2da61237b
import  -/  http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY:Network.HTTP.Types.Status 89141eb12608ef6ae13b4ca925571920
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist 0aff630e744e4e31b8f30afb6ba2be6c
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistEntity b1a81164694b45dd782d2c329cb2cab2
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistQuery f49c24dcd0623057eaedb42271af367b
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistStore cf3035bd99fb071645511275577dc7fe
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistUnique 32678f57ac1212b0f3aac70a77a3c0df
import  -/  persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n:Database.Persist.Postgresql 10b056d5394430454ce529b83ca42db3
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Handler 5eeae0813494c783beb7f9babd90b06a
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Json a974a49c1b441c1d779a78e641086a29
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc:Yesod.Persist.Core e6c69656dbdff229818a75455816a39b
6976fbc76edb0b3e66decfcccfdc028c
  $s$WJogadaPartidaid2 ::
    Database.Persist.Class.PersistEntity.Key Model.Partida
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key Model.Partida
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                   @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                   @~ <Database.Persist.Class.PersistEntity.Key Model.Partida>_N) -}
c915344df5023974b5274d601eef4585
  $s$WJogadaRodadaid2 ::
    Database.Persist.Class.PersistEntity.Key Model.Rodada
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key Model.Rodada
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                   @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                   @~ <Database.Persist.Class.PersistEntity.Key Model.Rodada>_N) -}
38da567e0a7c4df5f62ab1302ff7f3a1
  $s$fFromJSON(,) ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Database.Persist.Class.PersistEntity.Key Model.Partida,
       Database.Persist.Class.PersistEntity.Key Model.Rodada)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Model.Partida,
                     Database.Persist.Class.PersistEntity.Key Model.Rodada)
                  (GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (Data.Aeson.Types.Internal.Array
                        -> Data.Aeson.Types.Internal.Parser
                             (Database.Persist.Class.PersistEntity.Key Model.Partida,
                              Database.Persist.Class.PersistEntity.Key Model.Rodada))
                     @ (Data.Aeson.Types.Internal.Value
                        -> Data.Aeson.Types.Internal.Parser
                             (Database.Persist.Class.PersistEntity.Key Model.Partida,
                              Database.Persist.Class.PersistEntity.Key Model.Rodada))
                     (Data.Aeson.Types.FromJSON.withArray
                        @ (Database.Persist.Class.PersistEntity.Key Model.Partida,
                           Database.Persist.Class.PersistEntity.Key Model.Rodada)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "(a, b)"#)))
                     (\ (t :: Data.Aeson.Types.Internal.Array) ->
                      let {
                        n :: GHC.Types.Int
                        = Data.Vector.Fusion.Util.unId
                            @ GHC.Types.Int
                            (Data.Vector.Fusion.Bundle.Monadic.length
                               @ Data.Vector.Fusion.Util.Id
                               @ Data.Vector.Vector
                               @ Data.Aeson.Types.Internal.Value
                               Data.Vector.Fusion.Util.$fMonadId
                               (Data.Vector.Fusion.Bundle.Monadic.fromVector
                                  @ Data.Vector.Fusion.Util.Id
                                  @ Data.Vector.Vector
                                  @ Data.Aeson.Types.Internal.Value
                                  Data.Vector.Fusion.Util.$fMonadId
                                  (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                                  t))
                      } in
                      case GHC.Classes.eqInt n (GHC.Types.I# 2#) of wild {
                        GHC.Types.False
                        -> GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Base.String
                             @ (Data.Aeson.Types.Internal.Parser
                                  (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                   Database.Persist.Class.PersistEntity.Key Model.Rodada))
                             (Data.Aeson.Types.Internal.$fMonadFailParser_$cfail
                                @ (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                   Database.Persist.Class.PersistEntity.Key Model.Rodada))
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b1
                                   (c :: GHC.Types.Char -> b1 -> b1)[OneShot]
                                   (n1 :: b1)[OneShot] ->
                                 GHC.CString.unpackFoldrCString#
                                   @ b1
                                   "cannot unpack array of length "#
                                   c
                                   (GHC.Base.foldr
                                      @ GHC.Types.Char
                                      @ b1
                                      c
                                      (GHC.CString.unpackFoldrCString#
                                         @ b1
                                         " into a tuple of length 2"#
                                         c
                                         n1)
                                      (GHC.Show.$fShowInt_$cshow n))))
                        GHC.Types.True
                        -> let {
                             d :: Data.Aeson.Types.Internal.Parser
                                    (Database.Persist.Class.PersistEntity.Key Model.Partida)
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                                 Model.$fFromJSONKey9_$cparseJSON
                                 (GHC.Types.I# 0#)
                                 t
                           } in
                           let {
                             d1 :: Data.Aeson.Types.Internal.Parser
                                     (Database.Persist.Class.PersistEntity.Key Model.Rodada
                                      -> (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                          Database.Persist.Class.PersistEntity.Key Model.Rodada))
                               {- Arity: 3 -}
                             = Data.Aeson.Types.FromJSON.$fFromJSON(,)_$s<$>
                                 @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                                 @ (Database.Persist.Class.PersistEntity.Key Model.Rodada
                                    -> (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                        Database.Persist.Class.PersistEntity.Key Model.Rodada))
                                 (GHC.Tuple.(,)
                                    @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                                    @ (Database.Persist.Class.PersistEntity.Key Model.Rodada))
                                 d
                           } in
                           let {
                             e :: Data.Aeson.Types.Internal.Parser
                                    (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                 Model.$fFromJSONKey7_$cparseJSON
                                 (GHC.Types.I# 1#)
                                 t
                           } in
                           GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (forall (f :: * -> *) r.
                                Data.Aeson.Types.Internal.JSONPath
                                -> Data.Aeson.Types.Internal.Failure f r
                                -> Data.Aeson.Types.Internal.Success
                                     (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                      Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                     f
                                     r
                                -> f r)
                             @ (Data.Aeson.Types.Internal.Parser
                                  (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                   Database.Persist.Class.PersistEntity.Key Model.Rodada))
                             (\ (tpl :: forall (f :: * -> *) r.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f r
                                        -> Data.Aeson.Types.Internal.Success
                                             (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                             f
                                             r
                                        -> f r) ->
                              tpl)
                               `cast`
                             (<forall (f :: * -> *) r.
                               Data.Aeson.Types.Internal.JSONPath
                               -> Data.Aeson.Types.Internal.Failure f r
                               -> Data.Aeson.Types.Internal.Success
                                    (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                     Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                    f
                                    r
                               -> f r>_R
                              ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                            <(Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key
                                                Model.Rodada)>_R))
                             (\ @ (f :: * -> *)
                                @ r
                                (path :: Data.Aeson.Types.Internal.JSONPath)
                                (kf :: Data.Aeson.Types.Internal.Failure f r)
                                (ks :: Data.Aeson.Types.Internal.Success
                                         (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                          Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                         f
                                         r) ->
                              Data.Aeson.Types.Internal.runParser
                                @ (Database.Persist.Class.PersistEntity.Key Model.Rodada
                                   -> (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                       Database.Persist.Class.PersistEntity.Key Model.Rodada))
                                d1
                                @ f
                                @ r
                                path
                                kf
                                (\ (a1 :: Database.Persist.Class.PersistEntity.Key Model.Rodada
                                          -> (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key
                                                Model.Rodada)) ->
                                 Data.Aeson.Types.Internal.runParser
                                   @ (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                      Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                   (GHC.Base.$
                                      @ 'GHC.Types.PtrRepLifted
                                      @ (forall (f1 :: * -> *) r1.
                                         Data.Aeson.Types.Internal.JSONPath
                                         -> Data.Aeson.Types.Internal.Failure f1 r1
                                         -> Data.Aeson.Types.Internal.Success
                                              (Database.Persist.Class.PersistEntity.Key
                                                 Model.Partida,
                                               Database.Persist.Class.PersistEntity.Key
                                                 Model.Rodada)
                                              f1
                                              r1
                                         -> f1 r1)
                                      @ (Data.Aeson.Types.Internal.Parser
                                           (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                            Database.Persist.Class.PersistEntity.Key Model.Rodada))
                                      (\ (tpl :: forall (f1 :: * -> *) r1.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f1 r1
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (Database.Persist.Class.PersistEntity.Key
                                                         Model.Partida,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Rodada)
                                                      f1
                                                      r1
                                                 -> f1 r1) ->
                                       tpl)
                                        `cast`
                                      (<forall (f1 :: * -> *) r1.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f1 r1
                                        -> Data.Aeson.Types.Internal.Success
                                             (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                             f1
                                             r1
                                        -> f1 r1>_R
                                       ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                     <(Database.Persist.Class.PersistEntity.Key
                                                         Model.Partida,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Rodada)>_R))
                                      (\ @ (f1 :: * -> *)
                                         @ r1
                                         (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                         (kf1 :: Data.Aeson.Types.Internal.Failure f1 r1)
                                         (ks1 :: Data.Aeson.Types.Internal.Success
                                                   (Database.Persist.Class.PersistEntity.Key
                                                      Model.Partida,
                                                    Database.Persist.Class.PersistEntity.Key
                                                      Model.Rodada)
                                                   f1
                                                   r1) ->
                                       Data.Aeson.Types.Internal.runParser
                                         @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                         e
                                         @ f1
                                         @ r1
                                         path1
                                         kf1
                                         (\ (a2 :: Database.Persist.Class.PersistEntity.Key
                                                     Model.Rodada) ->
                                          let {
                                            a3 :: (Database.Persist.Class.PersistEntity.Key
                                                     Model.Partida,
                                                   Database.Persist.Class.PersistEntity.Key
                                                     Model.Rodada)
                                            = a1 a2
                                          } in
                                          Data.Aeson.Types.Internal.runParser
                                            @ (Database.Persist.Class.PersistEntity.Key
                                                 Model.Partida,
                                               Database.Persist.Class.PersistEntity.Key
                                                 Model.Rodada)
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall (f2 :: * -> *) r2.
                                                  Data.Aeson.Types.Internal.JSONPath
                                                  -> Data.Aeson.Types.Internal.Failure f2 r2
                                                  -> Data.Aeson.Types.Internal.Success
                                                       (Database.Persist.Class.PersistEntity.Key
                                                          Model.Partida,
                                                        Database.Persist.Class.PersistEntity.Key
                                                          Model.Rodada)
                                                       f2
                                                       r2
                                                  -> f2 r2)
                                               @ (Data.Aeson.Types.Internal.Parser
                                                    (Database.Persist.Class.PersistEntity.Key
                                                       Model.Partida,
                                                     Database.Persist.Class.PersistEntity.Key
                                                       Model.Rodada))
                                               (\ (tpl :: forall (f2 :: * -> *) r2.
                                                          Data.Aeson.Types.Internal.JSONPath
                                                          -> Data.Aeson.Types.Internal.Failure f2 r2
                                                          -> Data.Aeson.Types.Internal.Success
                                                               (Database.Persist.Class.PersistEntity.Key
                                                                  Model.Partida,
                                                                Database.Persist.Class.PersistEntity.Key
                                                                  Model.Rodada)
                                                               f2
                                                               r2
                                                          -> f2 r2) ->
                                                tpl)
                                                 `cast`
                                               (<forall (f2 :: * -> *) r2.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f2 r2
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (Database.Persist.Class.PersistEntity.Key
                                                         Model.Partida,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Rodada)
                                                      f2
                                                      r2
                                                 -> f2 r2>_R
                                                ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                              <(Database.Persist.Class.PersistEntity.Key
                                                                  Model.Partida,
                                                                Database.Persist.Class.PersistEntity.Key
                                                                  Model.Rodada)>_R))
                                               (\ @ (f2 :: * -> *)
                                                  @ r2
                                                  (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                  (_kf :: Data.Aeson.Types.Internal.Failure f2 r2)
                                                  (ks2 :: Data.Aeson.Types.Internal.Success
                                                            (Database.Persist.Class.PersistEntity.Key
                                                               Model.Partida,
                                                             Database.Persist.Class.PersistEntity.Key
                                                               Model.Rodada)
                                                            f2
                                                            r2) ->
                                                ks2 a3))
                                            @ f1
                                            @ r1
                                            path1
                                            kf1
                                            ks1)))
                                   @ f
                                   @ r
                                   path
                                   kf
                                   ks)) }))
                  (Data.Aeson.Types.FromJSON.$fFromJSON(,)_$cparseJSONList
                     @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                     @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                     Model.$fFromJSONKey9
                     Model.$fFromJSONKey7) -}
da7edede7d956eb2c306fb53d30e9b0a
  $s$fFromJSON(,,) ::
    Data.Aeson.Types.FromJSON.FromJSON
      (Database.Persist.Class.PersistEntity.Key Model.Partida,
       Database.Persist.Class.PersistEntity.Key Model.Rodada,
       Database.Persist.Class.PersistEntity.Key Model.Usuario)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Model.Partida,
                     Database.Persist.Class.PersistEntity.Key Model.Rodada,
                     Database.Persist.Class.PersistEntity.Key Model.Usuario)
                  (GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (Data.Aeson.Types.Internal.Array
                        -> Data.Aeson.Types.Internal.Parser
                             (Database.Persist.Class.PersistEntity.Key Model.Partida,
                              Database.Persist.Class.PersistEntity.Key Model.Rodada,
                              Database.Persist.Class.PersistEntity.Key Model.Usuario))
                     @ (Data.Aeson.Types.Internal.Value
                        -> Data.Aeson.Types.Internal.Parser
                             (Database.Persist.Class.PersistEntity.Key Model.Partida,
                              Database.Persist.Class.PersistEntity.Key Model.Rodada,
                              Database.Persist.Class.PersistEntity.Key Model.Usuario))
                     (Data.Aeson.Types.FromJSON.withArray
                        @ (Database.Persist.Class.PersistEntity.Key Model.Partida,
                           Database.Persist.Class.PersistEntity.Key Model.Rodada,
                           Database.Persist.Class.PersistEntity.Key Model.Usuario)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "(a, b, c)"#)))
                     (\ (t :: Data.Aeson.Types.Internal.Array) ->
                      let {
                        n :: GHC.Types.Int
                        = Data.Vector.Fusion.Util.unId
                            @ GHC.Types.Int
                            (Data.Vector.Fusion.Bundle.Monadic.length
                               @ Data.Vector.Fusion.Util.Id
                               @ Data.Vector.Vector
                               @ Data.Aeson.Types.Internal.Value
                               Data.Vector.Fusion.Util.$fMonadId
                               (Data.Vector.Fusion.Bundle.Monadic.fromVector
                                  @ Data.Vector.Fusion.Util.Id
                                  @ Data.Vector.Vector
                                  @ Data.Aeson.Types.Internal.Value
                                  Data.Vector.Fusion.Util.$fMonadId
                                  (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                                  t))
                      } in
                      case GHC.Classes.eqInt n (GHC.Types.I# 3#) of wild {
                        GHC.Types.False
                        -> GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Base.String
                             @ (Data.Aeson.Types.Internal.Parser
                                  (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                   Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                   Database.Persist.Class.PersistEntity.Key Model.Usuario))
                             (Data.Aeson.Types.Internal.$fMonadFailParser_$cfail
                                @ (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                   Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                   Database.Persist.Class.PersistEntity.Key Model.Usuario))
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b1
                                   (c1 :: GHC.Types.Char -> b1 -> b1)[OneShot]
                                   (n1 :: b1)[OneShot] ->
                                 GHC.CString.unpackFoldrCString#
                                   @ b1
                                   "cannot unpack array of length "#
                                   c1
                                   (GHC.Base.foldr
                                      @ GHC.Types.Char
                                      @ b1
                                      c1
                                      (GHC.CString.unpackFoldrCString#
                                         @ b1
                                         " into a tuple of length 3"#
                                         c1
                                         n1)
                                      (GHC.Show.$fShowInt_$cshow n))))
                        GHC.Types.True
                        -> let {
                             d :: Data.Aeson.Types.Internal.Parser
                                    (Database.Persist.Class.PersistEntity.Key Model.Usuario
                                     -> (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                         Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                         Database.Persist.Class.PersistEntity.Key Model.Usuario))
                             = let {
                                 d1 :: Data.Aeson.Types.Internal.Parser
                                         (Database.Persist.Class.PersistEntity.Key Model.Partida)
                                 = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                     @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                                     Model.$fFromJSONKey9_$cparseJSON
                                     (GHC.Types.I# 0#)
                                     t
                               } in
                               let {
                                 d2 :: Data.Aeson.Types.Internal.Parser
                                         (Database.Persist.Class.PersistEntity.Key Model.Rodada
                                          -> Database.Persist.Class.PersistEntity.Key Model.Usuario
                                          -> (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                              Database.Persist.Class.PersistEntity.Key
                                                Model.Usuario))
                                   {- Arity: 3 -}
                                 = Data.Aeson.Types.FromJSON.$fFromJSON(,)_$s<$>
                                     @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                                     @ (Database.Persist.Class.PersistEntity.Key Model.Rodada
                                        -> Database.Persist.Class.PersistEntity.Key Model.Usuario
                                        -> (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                            Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                            Database.Persist.Class.PersistEntity.Key Model.Usuario))
                                     (GHC.Tuple.(,,)
                                        @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                                        @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                        @ (Database.Persist.Class.PersistEntity.Key Model.Usuario))
                                     d1
                               } in
                               let {
                                 e :: Data.Aeson.Types.Internal.Parser
                                        (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                 = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                     @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                     Model.$fFromJSONKey7_$cparseJSON
                                     (GHC.Types.I# 1#)
                                     t
                               } in
                               GHC.Base.$
                                 @ 'GHC.Types.PtrRepLifted
                                 @ (forall (f :: * -> *) r.
                                    Data.Aeson.Types.Internal.JSONPath
                                    -> Data.Aeson.Types.Internal.Failure f r
                                    -> Data.Aeson.Types.Internal.Success
                                         (Database.Persist.Class.PersistEntity.Key Model.Usuario
                                          -> (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                              Database.Persist.Class.PersistEntity.Key
                                                Model.Usuario))
                                         f
                                         r
                                    -> f r)
                                 @ (Data.Aeson.Types.Internal.Parser
                                      (Database.Persist.Class.PersistEntity.Key Model.Usuario
                                       -> (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                           Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                           Database.Persist.Class.PersistEntity.Key Model.Usuario)))
                                 (\ (tpl :: forall (f :: * -> *) r.
                                            Data.Aeson.Types.Internal.JSONPath
                                            -> Data.Aeson.Types.Internal.Failure f r
                                            -> Data.Aeson.Types.Internal.Success
                                                 (Database.Persist.Class.PersistEntity.Key
                                                    Model.Usuario
                                                  -> (Database.Persist.Class.PersistEntity.Key
                                                        Model.Partida,
                                                      Database.Persist.Class.PersistEntity.Key
                                                        Model.Rodada,
                                                      Database.Persist.Class.PersistEntity.Key
                                                        Model.Usuario))
                                                 f
                                                 r
                                            -> f r) ->
                                  tpl)
                                   `cast`
                                 (<forall (f :: * -> *) r.
                                   Data.Aeson.Types.Internal.JSONPath
                                   -> Data.Aeson.Types.Internal.Failure f r
                                   -> Data.Aeson.Types.Internal.Success
                                        (Database.Persist.Class.PersistEntity.Key Model.Usuario
                                         -> (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                             Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                             Database.Persist.Class.PersistEntity.Key
                                               Model.Usuario))
                                        f
                                        r
                                   -> f r>_R
                                  ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                <Database.Persist.Class.PersistEntity.Key
                                                   Model.Usuario
                                                 -> (Database.Persist.Class.PersistEntity.Key
                                                       Model.Partida,
                                                     Database.Persist.Class.PersistEntity.Key
                                                       Model.Rodada,
                                                     Database.Persist.Class.PersistEntity.Key
                                                       Model.Usuario)>_R))
                                 (\ @ (f :: * -> *)
                                    @ r
                                    (path :: Data.Aeson.Types.Internal.JSONPath)
                                    (kf :: Data.Aeson.Types.Internal.Failure f r)
                                    (ks :: Data.Aeson.Types.Internal.Success
                                             (Database.Persist.Class.PersistEntity.Key Model.Usuario
                                              -> (Database.Persist.Class.PersistEntity.Key
                                                    Model.Partida,
                                                  Database.Persist.Class.PersistEntity.Key
                                                    Model.Rodada,
                                                  Database.Persist.Class.PersistEntity.Key
                                                    Model.Usuario))
                                             f
                                             r) ->
                                  Data.Aeson.Types.Internal.runParser
                                    @ (Database.Persist.Class.PersistEntity.Key Model.Rodada
                                       -> Database.Persist.Class.PersistEntity.Key Model.Usuario
                                       -> (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                           Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                           Database.Persist.Class.PersistEntity.Key Model.Usuario))
                                    d2
                                    @ f
                                    @ r
                                    path
                                    kf
                                    (\ (a1 :: Database.Persist.Class.PersistEntity.Key Model.Rodada
                                              -> Database.Persist.Class.PersistEntity.Key
                                                   Model.Usuario
                                              -> (Database.Persist.Class.PersistEntity.Key
                                                    Model.Partida,
                                                  Database.Persist.Class.PersistEntity.Key
                                                    Model.Rodada,
                                                  Database.Persist.Class.PersistEntity.Key
                                                    Model.Usuario)) ->
                                     Data.Aeson.Types.Internal.runParser
                                       @ (Database.Persist.Class.PersistEntity.Key Model.Usuario
                                          -> (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                              Database.Persist.Class.PersistEntity.Key
                                                Model.Usuario))
                                       (GHC.Base.$
                                          @ 'GHC.Types.PtrRepLifted
                                          @ (forall (f1 :: * -> *) r1.
                                             Data.Aeson.Types.Internal.JSONPath
                                             -> Data.Aeson.Types.Internal.Failure f1 r1
                                             -> Data.Aeson.Types.Internal.Success
                                                  (Database.Persist.Class.PersistEntity.Key
                                                     Model.Usuario
                                                   -> (Database.Persist.Class.PersistEntity.Key
                                                         Model.Partida,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Rodada,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Usuario))
                                                  f1
                                                  r1
                                             -> f1 r1)
                                          @ (Data.Aeson.Types.Internal.Parser
                                               (Database.Persist.Class.PersistEntity.Key
                                                  Model.Usuario
                                                -> (Database.Persist.Class.PersistEntity.Key
                                                      Model.Partida,
                                                    Database.Persist.Class.PersistEntity.Key
                                                      Model.Rodada,
                                                    Database.Persist.Class.PersistEntity.Key
                                                      Model.Usuario)))
                                          (\ (tpl :: forall (f1 :: * -> *) r1.
                                                     Data.Aeson.Types.Internal.JSONPath
                                                     -> Data.Aeson.Types.Internal.Failure f1 r1
                                                     -> Data.Aeson.Types.Internal.Success
                                                          (Database.Persist.Class.PersistEntity.Key
                                                             Model.Usuario
                                                           -> (Database.Persist.Class.PersistEntity.Key
                                                                 Model.Partida,
                                                               Database.Persist.Class.PersistEntity.Key
                                                                 Model.Rodada,
                                                               Database.Persist.Class.PersistEntity.Key
                                                                 Model.Usuario))
                                                          f1
                                                          r1
                                                     -> f1 r1) ->
                                           tpl)
                                            `cast`
                                          (<forall (f1 :: * -> *) r1.
                                            Data.Aeson.Types.Internal.JSONPath
                                            -> Data.Aeson.Types.Internal.Failure f1 r1
                                            -> Data.Aeson.Types.Internal.Success
                                                 (Database.Persist.Class.PersistEntity.Key
                                                    Model.Usuario
                                                  -> (Database.Persist.Class.PersistEntity.Key
                                                        Model.Partida,
                                                      Database.Persist.Class.PersistEntity.Key
                                                        Model.Rodada,
                                                      Database.Persist.Class.PersistEntity.Key
                                                        Model.Usuario))
                                                 f1
                                                 r1
                                            -> f1 r1>_R
                                           ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                         <Database.Persist.Class.PersistEntity.Key
                                                            Model.Usuario
                                                          -> (Database.Persist.Class.PersistEntity.Key
                                                                Model.Partida,
                                                              Database.Persist.Class.PersistEntity.Key
                                                                Model.Rodada,
                                                              Database.Persist.Class.PersistEntity.Key
                                                                Model.Usuario)>_R))
                                          (\ @ (f1 :: * -> *)
                                             @ r1
                                             (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                             (kf1 :: Data.Aeson.Types.Internal.Failure f1 r1)
                                             (ks1 :: Data.Aeson.Types.Internal.Success
                                                       (Database.Persist.Class.PersistEntity.Key
                                                          Model.Usuario
                                                        -> (Database.Persist.Class.PersistEntity.Key
                                                              Model.Partida,
                                                            Database.Persist.Class.PersistEntity.Key
                                                              Model.Rodada,
                                                            Database.Persist.Class.PersistEntity.Key
                                                              Model.Usuario))
                                                       f1
                                                       r1) ->
                                           Data.Aeson.Types.Internal.runParser
                                             @ (Database.Persist.Class.PersistEntity.Key
                                                  Model.Rodada)
                                             e
                                             @ f1
                                             @ r1
                                             path1
                                             kf1
                                             (\ (a2 :: Database.Persist.Class.PersistEntity.Key
                                                         Model.Rodada) ->
                                              let {
                                                a3 :: Database.Persist.Class.PersistEntity.Key
                                                        Model.Usuario
                                                      -> (Database.Persist.Class.PersistEntity.Key
                                                            Model.Partida,
                                                          Database.Persist.Class.PersistEntity.Key
                                                            Model.Rodada,
                                                          Database.Persist.Class.PersistEntity.Key
                                                            Model.Usuario)
                                                = a1 a2
                                              } in
                                              Data.Aeson.Types.Internal.runParser
                                                @ (Database.Persist.Class.PersistEntity.Key
                                                     Model.Usuario
                                                   -> (Database.Persist.Class.PersistEntity.Key
                                                         Model.Partida,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Rodada,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Usuario))
                                                (GHC.Base.$
                                                   @ 'GHC.Types.PtrRepLifted
                                                   @ (forall (f2 :: * -> *) r2.
                                                      Data.Aeson.Types.Internal.JSONPath
                                                      -> Data.Aeson.Types.Internal.Failure f2 r2
                                                      -> Data.Aeson.Types.Internal.Success
                                                           (Database.Persist.Class.PersistEntity.Key
                                                              Model.Usuario
                                                            -> (Database.Persist.Class.PersistEntity.Key
                                                                  Model.Partida,
                                                                Database.Persist.Class.PersistEntity.Key
                                                                  Model.Rodada,
                                                                Database.Persist.Class.PersistEntity.Key
                                                                  Model.Usuario))
                                                           f2
                                                           r2
                                                      -> f2 r2)
                                                   @ (Data.Aeson.Types.Internal.Parser
                                                        (Database.Persist.Class.PersistEntity.Key
                                                           Model.Usuario
                                                         -> (Database.Persist.Class.PersistEntity.Key
                                                               Model.Partida,
                                                             Database.Persist.Class.PersistEntity.Key
                                                               Model.Rodada,
                                                             Database.Persist.Class.PersistEntity.Key
                                                               Model.Usuario)))
                                                   (\ (tpl :: forall (f2 :: * -> *) r2.
                                                              Data.Aeson.Types.Internal.JSONPath
                                                              -> Data.Aeson.Types.Internal.Failure
                                                                   f2 r2
                                                              -> Data.Aeson.Types.Internal.Success
                                                                   (Database.Persist.Class.PersistEntity.Key
                                                                      Model.Usuario
                                                                    -> (Database.Persist.Class.PersistEntity.Key
                                                                          Model.Partida,
                                                                        Database.Persist.Class.PersistEntity.Key
                                                                          Model.Rodada,
                                                                        Database.Persist.Class.PersistEntity.Key
                                                                          Model.Usuario))
                                                                   f2
                                                                   r2
                                                              -> f2 r2) ->
                                                    tpl)
                                                     `cast`
                                                   (<forall (f2 :: * -> *) r2.
                                                     Data.Aeson.Types.Internal.JSONPath
                                                     -> Data.Aeson.Types.Internal.Failure f2 r2
                                                     -> Data.Aeson.Types.Internal.Success
                                                          (Database.Persist.Class.PersistEntity.Key
                                                             Model.Usuario
                                                           -> (Database.Persist.Class.PersistEntity.Key
                                                                 Model.Partida,
                                                               Database.Persist.Class.PersistEntity.Key
                                                                 Model.Rodada,
                                                               Database.Persist.Class.PersistEntity.Key
                                                                 Model.Usuario))
                                                          f2
                                                          r2
                                                     -> f2 r2>_R
                                                    ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                  <Database.Persist.Class.PersistEntity.Key
                                                                     Model.Usuario
                                                                   -> (Database.Persist.Class.PersistEntity.Key
                                                                         Model.Partida,
                                                                       Database.Persist.Class.PersistEntity.Key
                                                                         Model.Rodada,
                                                                       Database.Persist.Class.PersistEntity.Key
                                                                         Model.Usuario)>_R))
                                                   (\ @ (f2 :: * -> *)
                                                      @ r2
                                                      (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                      (_kf :: Data.Aeson.Types.Internal.Failure
                                                                f2 r2)
                                                      (ks2 :: Data.Aeson.Types.Internal.Success
                                                                (Database.Persist.Class.PersistEntity.Key
                                                                   Model.Usuario
                                                                 -> (Database.Persist.Class.PersistEntity.Key
                                                                       Model.Partida,
                                                                     Database.Persist.Class.PersistEntity.Key
                                                                       Model.Rodada,
                                                                     Database.Persist.Class.PersistEntity.Key
                                                                       Model.Usuario))
                                                                f2
                                                                r2) ->
                                                    ks2 a3))
                                                @ f1
                                                @ r1
                                                path1
                                                kf1
                                                ks1)))
                                       @ f
                                       @ r
                                       path
                                       kf
                                       ks))
                           } in
                           let {
                             e :: Data.Aeson.Types.Internal.Parser
                                    (Database.Persist.Class.PersistEntity.Key Model.Usuario)
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ (Database.Persist.Class.PersistEntity.Key Model.Usuario)
                                 Model.$fFromJSONKey14_$cparseJSON
                                 (GHC.Types.I# 2#)
                                 t
                           } in
                           GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (forall (f :: * -> *) r.
                                Data.Aeson.Types.Internal.JSONPath
                                -> Data.Aeson.Types.Internal.Failure f r
                                -> Data.Aeson.Types.Internal.Success
                                     (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                      Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                      Database.Persist.Class.PersistEntity.Key Model.Usuario)
                                     f
                                     r
                                -> f r)
                             @ (Data.Aeson.Types.Internal.Parser
                                  (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                   Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                   Database.Persist.Class.PersistEntity.Key Model.Usuario))
                             (\ (tpl :: forall (f :: * -> *) r.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f r
                                        -> Data.Aeson.Types.Internal.Success
                                             (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                              Database.Persist.Class.PersistEntity.Key
                                                Model.Usuario)
                                             f
                                             r
                                        -> f r) ->
                              tpl)
                               `cast`
                             (<forall (f :: * -> *) r.
                               Data.Aeson.Types.Internal.JSONPath
                               -> Data.Aeson.Types.Internal.Failure f r
                               -> Data.Aeson.Types.Internal.Success
                                    (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                     Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                     Database.Persist.Class.PersistEntity.Key Model.Usuario)
                                    f
                                    r
                               -> f r>_R
                              ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                            <(Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                              Database.Persist.Class.PersistEntity.Key
                                                Model.Usuario)>_R))
                             (\ @ (f :: * -> *)
                                @ r
                                (path :: Data.Aeson.Types.Internal.JSONPath)
                                (kf :: Data.Aeson.Types.Internal.Failure f r)
                                (ks :: Data.Aeson.Types.Internal.Success
                                         (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                          Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                          Database.Persist.Class.PersistEntity.Key Model.Usuario)
                                         f
                                         r) ->
                              Data.Aeson.Types.Internal.runParser
                                @ (Database.Persist.Class.PersistEntity.Key Model.Usuario
                                   -> (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                       Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                       Database.Persist.Class.PersistEntity.Key Model.Usuario))
                                d
                                @ f
                                @ r
                                path
                                kf
                                (\ (a1 :: Database.Persist.Class.PersistEntity.Key Model.Usuario
                                          -> (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                              Database.Persist.Class.PersistEntity.Key
                                                Model.Usuario)) ->
                                 Data.Aeson.Types.Internal.runParser
                                   @ (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                      Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                      Database.Persist.Class.PersistEntity.Key Model.Usuario)
                                   (GHC.Base.$
                                      @ 'GHC.Types.PtrRepLifted
                                      @ (forall (f1 :: * -> *) r1.
                                         Data.Aeson.Types.Internal.JSONPath
                                         -> Data.Aeson.Types.Internal.Failure f1 r1
                                         -> Data.Aeson.Types.Internal.Success
                                              (Database.Persist.Class.PersistEntity.Key
                                                 Model.Partida,
                                               Database.Persist.Class.PersistEntity.Key
                                                 Model.Rodada,
                                               Database.Persist.Class.PersistEntity.Key
                                                 Model.Usuario)
                                              f1
                                              r1
                                         -> f1 r1)
                                      @ (Data.Aeson.Types.Internal.Parser
                                           (Database.Persist.Class.PersistEntity.Key Model.Partida,
                                            Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                            Database.Persist.Class.PersistEntity.Key Model.Usuario))
                                      (\ (tpl :: forall (f1 :: * -> *) r1.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f1 r1
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (Database.Persist.Class.PersistEntity.Key
                                                         Model.Partida,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Rodada,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Usuario)
                                                      f1
                                                      r1
                                                 -> f1 r1) ->
                                       tpl)
                                        `cast`
                                      (<forall (f1 :: * -> *) r1.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f1 r1
                                        -> Data.Aeson.Types.Internal.Success
                                             (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida,
                                              Database.Persist.Class.PersistEntity.Key Model.Rodada,
                                              Database.Persist.Class.PersistEntity.Key
                                                Model.Usuario)
                                             f1
                                             r1
                                        -> f1 r1>_R
                                       ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                     <(Database.Persist.Class.PersistEntity.Key
                                                         Model.Partida,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Rodada,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Usuario)>_R))
                                      (\ @ (f1 :: * -> *)
                                         @ r1
                                         (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                         (kf1 :: Data.Aeson.Types.Internal.Failure f1 r1)
                                         (ks1 :: Data.Aeson.Types.Internal.Success
                                                   (Database.Persist.Class.PersistEntity.Key
                                                      Model.Partida,
                                                    Database.Persist.Class.PersistEntity.Key
                                                      Model.Rodada,
                                                    Database.Persist.Class.PersistEntity.Key
                                                      Model.Usuario)
                                                   f1
                                                   r1) ->
                                       Data.Aeson.Types.Internal.runParser
                                         @ (Database.Persist.Class.PersistEntity.Key Model.Usuario)
                                         e
                                         @ f1
                                         @ r1
                                         path1
                                         kf1
                                         (\ (a2 :: Database.Persist.Class.PersistEntity.Key
                                                     Model.Usuario) ->
                                          let {
                                            a3 :: (Database.Persist.Class.PersistEntity.Key
                                                     Model.Partida,
                                                   Database.Persist.Class.PersistEntity.Key
                                                     Model.Rodada,
                                                   Database.Persist.Class.PersistEntity.Key
                                                     Model.Usuario)
                                            = a1 a2
                                          } in
                                          Data.Aeson.Types.Internal.runParser
                                            @ (Database.Persist.Class.PersistEntity.Key
                                                 Model.Partida,
                                               Database.Persist.Class.PersistEntity.Key
                                                 Model.Rodada,
                                               Database.Persist.Class.PersistEntity.Key
                                                 Model.Usuario)
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall (f2 :: * -> *) r2.
                                                  Data.Aeson.Types.Internal.JSONPath
                                                  -> Data.Aeson.Types.Internal.Failure f2 r2
                                                  -> Data.Aeson.Types.Internal.Success
                                                       (Database.Persist.Class.PersistEntity.Key
                                                          Model.Partida,
                                                        Database.Persist.Class.PersistEntity.Key
                                                          Model.Rodada,
                                                        Database.Persist.Class.PersistEntity.Key
                                                          Model.Usuario)
                                                       f2
                                                       r2
                                                  -> f2 r2)
                                               @ (Data.Aeson.Types.Internal.Parser
                                                    (Database.Persist.Class.PersistEntity.Key
                                                       Model.Partida,
                                                     Database.Persist.Class.PersistEntity.Key
                                                       Model.Rodada,
                                                     Database.Persist.Class.PersistEntity.Key
                                                       Model.Usuario))
                                               (\ (tpl :: forall (f2 :: * -> *) r2.
                                                          Data.Aeson.Types.Internal.JSONPath
                                                          -> Data.Aeson.Types.Internal.Failure f2 r2
                                                          -> Data.Aeson.Types.Internal.Success
                                                               (Database.Persist.Class.PersistEntity.Key
                                                                  Model.Partida,
                                                                Database.Persist.Class.PersistEntity.Key
                                                                  Model.Rodada,
                                                                Database.Persist.Class.PersistEntity.Key
                                                                  Model.Usuario)
                                                               f2
                                                               r2
                                                          -> f2 r2) ->
                                                tpl)
                                                 `cast`
                                               (<forall (f2 :: * -> *) r2.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f2 r2
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (Database.Persist.Class.PersistEntity.Key
                                                         Model.Partida,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Rodada,
                                                       Database.Persist.Class.PersistEntity.Key
                                                         Model.Usuario)
                                                      f2
                                                      r2
                                                 -> f2 r2>_R
                                                ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                              <(Database.Persist.Class.PersistEntity.Key
                                                                  Model.Partida,
                                                                Database.Persist.Class.PersistEntity.Key
                                                                  Model.Rodada,
                                                                Database.Persist.Class.PersistEntity.Key
                                                                  Model.Usuario)>_R))
                                               (\ @ (f2 :: * -> *)
                                                  @ r2
                                                  (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                  (_kf :: Data.Aeson.Types.Internal.Failure f2 r2)
                                                  (ks2 :: Data.Aeson.Types.Internal.Success
                                                            (Database.Persist.Class.PersistEntity.Key
                                                               Model.Partida,
                                                             Database.Persist.Class.PersistEntity.Key
                                                               Model.Rodada,
                                                             Database.Persist.Class.PersistEntity.Key
                                                               Model.Usuario)
                                                            f2
                                                            r2) ->
                                                ks2 a3))
                                            @ f1
                                            @ r1
                                            path1
                                            kf1
                                            ks1)))
                                   @ f
                                   @ r
                                   path
                                   kf
                                   ks)) }))
                  (Data.Aeson.Types.FromJSON.$fFromJSON(,,)_$cparseJSONList
                     @ (Database.Persist.Class.PersistEntity.Key Model.Partida)
                     @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                     @ (Database.Persist.Class.PersistEntity.Key Model.Usuario)
                     Model.$fFromJSONKey9
                     Model.$fFromJSONKey7
                     Model.$fFromJSONKey14) -}
311fe6087f34fb7b1c2a6c27d3f7d61b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Handler.Jogada.$trModule2
                   Handler.Jogada.$trModule1) -}
fc5c0847cb444316534387946217330f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Handler.Jogada"#) -}
f7438a1c93449eb4d9fd4410a9cf704a
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "aulahaskell-0.0.0-LoUslvgBjWU1RbrXO1tmnM"#) -}
4836892d7c75319396773f405ec27fa5
  deleteExcluirjogadaR ::
    Model.JogadaId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Jogada.deleteExcluirjogadaR1
                  `cast`
                (<Model.JogadaId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
3f9fa59d23800fc80caab1f4603f9817
  deleteExcluirjogadaR1 ::
    Model.JogadaId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (uid :: Model.JogadaId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Jogada.deleteExcluirjogadaR11
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistApp1
                        @ Model.Jogada
                        (Handler.Jogada.deleteExcluirjogadaR10 uid)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <Model.Jogada>_N)_R
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistApp1
                        @ ()
                        (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cdelete
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ Model.Jogada
                           (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                           Handler.Jogada.deleteExcluirjogadaR8
                             `cast`
                           (GHC.Classes.(%,%)
                              <Database.Persist.Class.PersistEntity.PersistEntity Model.Jogada>_N
                              ((Data.Type.Equality.~)
                                 <*>_N
                                 (Sym (Model.D:R:PersistEntityBackendJogada[0]))
                                 (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                           uid)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <()>_N)_R
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   Handler.Jogada.deleteExcluirjogadaR2
                   ipv4 } } }) -}
d315d9d631966345c65397a0eaad013f
  deleteExcluirjogadaR10 ::
    Database.Persist.Class.PersistEntity.Key Model.Jogada
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         Model.Jogada
  {- Unfolding: (Yesod.Persist.Core.get404
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Model.Jogada
                   (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                   Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend
                   Handler.Jogada.deleteExcluirjogadaR8
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity Model.Jogada>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendJogada[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
75e79484d4291792227cc8a2598a49c6
  deleteExcluirjogadaR11 :: Foundation.Handler ()
  {- Unfolding: (Handler.Funcs.anyOriginIn
                   Handler.Jogada.deleteExcluirjogadaR12) -}
30557b9ba320e848e6819f4acb3c09ac
  deleteExcluirjogadaR12 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.OPTIONS
                   Handler.Jogada.deleteExcluirjogadaR13) -}
e76f335a75e664ec95a9e7a1121fecbb
  deleteExcluirjogadaR13 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.DELETE
                   (GHC.Types.[] @ Handler.Funcs.HttpMethod)) -}
8bd53abe56fbfa5db3934ae911f438ef
  deleteExcluirjogadaR2 :: GHC.Exception.SomeException
  {- Unfolding: (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                   Handler.Jogada.deleteExcluirjogadaR3) -}
a527fd226efb6baa8e84e1fa5a2b43b3
  deleteExcluirjogadaR3 :: Yesod.Core.Types.HandlerContents
  {- Unfolding: (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv ipv1 ipv2 ipv3 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        Handler.Jogada.deleteExcluirjogadaR4
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 case (Data.Aeson.Encoding.Builder.encodeToBuilder
                         (Data.Aeson.Types.Internal.Object dt1))
                        `cast`
                      (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                 Yesod.Core.Types.HCContent
                   Network.HTTP.Types.Status.status200
                   (Yesod.Core.Types.TypedContent
                      dt
                      (Yesod.Core.Types.ContentBuilder
                         nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                         (GHC.Base.Nothing @ GHC.Types.Int))) } } }) -}
3424c2908ad0522e2b26769a3e9e43c5
  deleteExcluirjogadaR4 :: [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   Handler.Jogada.deleteExcluirjogadaR5
                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)) -}
9cf7d645ec65a8a4ae23bb18a02dcea3
  deleteExcluirjogadaR5 ::
    (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
  {- Unfolding: ((Handler.Jogada.deleteExcluirjogadaR7,
                  Handler.Jogada.deleteExcluirjogadaR6)) -}
ac342d5d178c92232a2dedb360a6d08d
  deleteExcluirjogadaR6 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Sucesso"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
43c2fbc91565c15f36ae7971a4de7307
  deleteExcluirjogadaR7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "resp"#) -}
c624769e4eea02b8a158aa512b09ae76
  deleteExcluirjogadaR8 ::
    (Database.Persist.Class.PersistEntity.PersistEntity Model.Jogada,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Model.$fPersistEntityJogada,
                  Handler.Jogada.deleteExcluirjogadaR9
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
eeb1d796a929124338977018f1dfe32c
  deleteExcluirjogadaR9 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
a7638561eb025a82199321a74d874811
  getBusjogadasoR ::
    Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Jogada.getBusjogadasoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Data.Aeson.Types.Internal.Value>_N))) -}
d8e71be62ab53ed3a4ea28d9d7586cbf
  getBusjogadasoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Jogada.optionsBusjogadasoR
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistApp1
                        @ [Database.Persist.Class.PersistEntity.Entity Model.Jogada]
                        Handler.Jogada.getBusjogadasoR2
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity Model.Jogada]>_N))
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Handler.Jogada.deleteExcluirjogadaR7,
                                  case GHC.Magic.runRW#
                                         @ 'GHC.Types.PtrRepLifted
                                         @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                         (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                          case GHC.Prim.newArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 0#
                                                 (Data.Vector.Mutable.uninitialised
                                                    @ Data.Aeson.Types.Internal.Value)
                                                 s1
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds3 { (#,#) ipv8 ipv9 ->
                                          case Handler.Jogada.getBusjogadasoR_$sfoldlM_loop
                                                 ipv8
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 (GHC.Base.map
                                                    @ (Database.Persist.Class.PersistEntity.Entity
                                                         Model.Jogada)
                                                    @ Data.Aeson.Types.Internal.Value
                                                    Model.$fToJSONEntity5_$ctoJSON
                                                    ipv3)
                                                 0#
                                                 0#
                                                 ipv9
                                                 @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                     (GHC.ST.ST
                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N)
                                                 0# of ds4 { (#,#) ipv10 ipv11 ->
                                          case ipv11 of wild5 { (,) v' n ->
                                          case v'
                                                 `cast`
                                               (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                          (GHC.ST.ST
                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                          case n of dt5 { GHC.Types.I# dt6 ->
                                          case GHC.Prim.unsafeFreezeArray#
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt3
                                                 ipv10
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds { (#,#) ipv12 ipv13 ->
                                          (# ipv12
                                               `cast`
                                             (GHC.Prim.State#
                                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                     <GHC.Prim.RealWorld>_N))_R,
                                             Data.Vector.Vector
                                               @ Data.Aeson.Types.Internal.Value
                                               dt1
                                               dt6
                                               ipv13 #) } } } } } }) of ds3 { (#,#) ipv8 ipv9 ->
                                  case ipv9 of dt1 { Data.Vector.Vector ipv10 ipv11 ipv12 ->
                                  Data.Aeson.Types.Internal.Array dt1 } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv2 } }) -}
ee416c9864b913a7fd2187af4873d7f4
  getBusjogadasoR2 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Model.Jogada]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.App
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Model.Jogada)))
                   = Handler.Jogada.getBusjogadasoR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity Model.Jogada))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.App>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity Model.Jogada))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Model.Jogada))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Model.Jogada))
                     @ [Database.Persist.Class.PersistEntity.Entity Model.Jogada]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1 @ Model.Jogada)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Model.Jogada)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Model.Jogada]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity Model.Jogada]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Model.Jogada]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.App>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Model.Jogada]>_N)))) -}
ceada2494fb496d4089bc5986ed481eb
  getBusjogadasoR_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Data.Aeson.Types.Internal.Value,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
11f710c39ae226761e57ef8fa0fd0ea9
  getBusjogadasoR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Model.Jogada)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Model.Jogada
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ GHC.Types.IO
                   Handler.Jogada.deleteExcluirjogadaR8
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity Model.Jogada>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendJogada[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Model.Jogada))
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Model.Jogada))) -}
5f7895f68a1823ebd9e737def6c1b165
  getJogadaidR :: Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Jogada.getJogadaidR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Data.Aeson.Types.Internal.Value>_N))) -}
2fad386fab21979af37541314cdaa2ff
  getJogadaidR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Jogada.optionsJogadaR
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Handler.Jogada.getJogadaidR_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <(Model.PartidaId, Model.RodadaId, Model.UsuarioId)>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Model.PartidaId, Model.RodadaId, Model.UsuarioId)>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,,) partida rodada usuario ->
                 case Foundation.$fYesodPersistApp1
                        @ (GHC.Base.Maybe
                             (Database.Persist.Class.PersistEntity.Entity Model.Jogada))
                        (Handler.Jogada.getJogadaidR7
                           (Model.JogadaLogin partida rodada usuario)
                             `cast`
                           (Sym (Model.D:R:UniqueJogada0[0])))
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <GHC.Base.Maybe
                              (Database.Persist.Class.PersistEntity.Entity Model.Jogada)>_N)_R
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild1 {
                   GHC.Base.Nothing
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ Data.Aeson.Types.Internal.Value
                        Handler.Jogada.getJogadaidR2
                        ipv4
                   GHC.Base.Just ds
                   -> case ds of wild2 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity uid jogada ->
                      GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ Data.Aeson.Types.Internal.Value
                        (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                           (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv6 ipv7 ipv8 ipv9 ->
                            case Data.Aeson.Types.Internal.$sfromList1
                                   @ Data.Aeson.Types.Internal.Value
                                   (GHC.Types.:
                                      @ Data.Aeson.Types.Internal.Pair
                                      (Handler.Jogada.deleteExcluirjogadaR7,
                                       case jogada of ww4 { Model.Jogada ww5 ww6 ww7 ww8 ww9 ->
                                       case ww5
                                              `cast`
                                            (Trans
                                                 (Model.D:R:KeyPartida0[0])
                                                 (Trans
                                                      (Model.N:R:KeyPartida[0])
                                                      (Trans
                                                           (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                           (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of ww10 { GHC.Int.I64# ww11 ->
                                       case ww6
                                              `cast`
                                            (Trans
                                                 (Model.D:R:KeyRodada0[0])
                                                 (Trans
                                                      (Model.N:R:KeyRodada[0])
                                                      (Trans
                                                           (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                           (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of ww12 { GHC.Int.I64# ww13 ->
                                       case ww7
                                              `cast`
                                            (Trans
                                                 (Model.D:R:KeyUsuario0[0])
                                                 (Trans
                                                      (Model.N:R:KeyUsuario[0])
                                                      (Trans
                                                           (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                           (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of ww14 { GHC.Int.I64# ww15 ->
                                       Model.$w$ctoJSON18 uid ww11 ww13 ww15 ww8 ww9 } } } })
                                      (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                   (Data.HashMap.Base.Empty
                                      @ Data.Text.Internal.Text
                                      @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                            case (Data.Aeson.Encoding.Builder.encodeToBuilder
                                    (Data.Aeson.Types.Internal.Object dt1))
                                   `cast`
                                 (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                            Yesod.Core.Types.HCContent
                              Network.HTTP.Types.Status.status200
                              (Yesod.Core.Types.TypedContent
                                 dt
                                 (Yesod.Core.Types.ContentBuilder
                                    nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                    (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                        ipv4 } } } } } }) -}
867538bf0b2802d965c4ad38b7b86415
  getJogadaidR2 :: GHC.Exception.SomeException
  {- Unfolding: (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                   Handler.Jogada.getJogadaidR3) -}
f3abf082254ab53fca962d8bdeda9da6
  getJogadaidR3 :: Yesod.Core.Types.HandlerContents
  {- Unfolding: (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv ipv1 ipv2 ipv3 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        Handler.Jogada.getJogadaidR4
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 case (Data.Aeson.Encoding.Builder.encodeToBuilder
                         (Data.Aeson.Types.Internal.Object dt1))
                        `cast`
                      (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                 Yesod.Core.Types.HCContent
                   Network.HTTP.Types.Status.status404
                   (Yesod.Core.Types.TypedContent
                      dt
                      (Yesod.Core.Types.ContentBuilder
                         nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                         (GHC.Base.Nothing @ GHC.Types.Int))) } } }) -}
dbc302d081d854c693c532dacc783da8
  getJogadaidR4 :: [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   Handler.Jogada.getJogadaidR5
                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)) -}
34f08102dae1177af0660b6b86f778b0
  getJogadaidR5 ::
    (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
  {- Unfolding: ((Handler.Jogada.deleteExcluirjogadaR7,
                  Handler.Jogada.getJogadaidR6)) -}
3f483d5e85dc3353d79d045b2c7e699c
  getJogadaidR6 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Jogada n\\195\\163o cadastrada"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
e08bd373ce15b4fde4ac86a0d213b371
  getJogadaidR7 ::
    Database.Persist.Class.PersistEntity.Unique Model.Jogada
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         (GHC.Base.Maybe
            (Database.Persist.Class.PersistEntity.Entity Model.Jogada))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistUnique.$fPersistUniqueReadSqlBackend_$cgetBy
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Model.Jogada
                   (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                   Handler.Jogada.deleteExcluirjogadaR8
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity Model.Jogada>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendJogada[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
5dc2c7ac6c96147cc5930cbf821e2fea
  getJogadaidR_ds ::
    Yesod.Core.Types.HandlerT
      Foundation.App
      GHC.Types.IO
      (Model.PartidaId, Model.RodadaId, Model.UsuarioId)
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ (Model.PartidaId, Model.RodadaId, Model.UsuarioId)
                   (Yesod.Auth.defaultMaybeAuthId_$s$fMonadHandlerHandlerT
                      @ Foundation.App)
                   Handler.Jogada.$s$fFromJSON(,,)) -}
f5723f2221f4fe83de252fa36cdad203
  getListarjogadaR ::
    Model.JogadaId
    -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Jogada.getListarjogadaR1
                  `cast`
                (<Model.JogadaId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Data.Aeson.Types.Internal.Value>_N))) -}
901599a9e274bc4465ff0c815bf60c28
  getListarjogadaR1 ::
    Model.JogadaId
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (uid :: Model.JogadaId)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Jogada.optionsBusjogadasoR
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistApp1
                        @ Model.Jogada
                        (Handler.Jogada.deleteExcluirjogadaR10 uid)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <Model.Jogada>_N)_R
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Model.Jogada)))
                   = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                       @ Model.Jogada
                       @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                       @ GHC.Types.IO
                       Handler.Jogada.deleteExcluirjogadaR8
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity Model.Jogada>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Model.D:R:PersistEntityBackendJogada[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                       Control.Monad.IO.Class.$fMonadIOIO
                       (GHC.Types.:
                          @ (Database.Persist.Class.PersistEntity.Filter Model.Jogada)
                          (Database.Persist.Class.PersistEntity.Filter
                             @ Model.Jogada
                             @ Model.JogadaId
                             Model.$fPersistFieldKey5
                             Model.$fPersistEntityJogada_$s$WJogadaId
                             (Data.Either.Left @ Model.JogadaId @ [Model.JogadaId] uid)
                             Database.Persist.Types.Base.Eq)
                          (GHC.Types.[]
                             @ (Database.Persist.Class.PersistEntity.Filter Model.Jogada)))
                       Handler.Jogada.getListarjogadaR2
                 } in
                 case Foundation.$fYesodPersistApp1
                        @ (GHC.Base.Maybe
                             (Database.Persist.Class.PersistEntity.Entity Model.Jogada))
                        (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                         let {
                           ds :: Yesod.Core.Types.HandlerT
                                   Foundation.App
                                   GHC.Types.IO
                                   (Data.Acquire.Internal.Acquire
                                      (Data.Conduit.Internal.Conduit.Source
                                         GHC.Types.IO
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Model.Jogada)))
                           = m1
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <Data.Acquire.Internal.Acquire
                                     (Data.Conduit.Internal.Conduit.Source
                                        GHC.Types.IO
                                        (Database.Persist.Class.PersistEntity.Entity
                                           Model.Jogada))>_N)
                               r1
                         } in
                         (\ (r :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (ds
                                  `cast`
                                (Yesod.Core.Types.N:HandlerT[0]
                                     <Foundation.App>_N
                                     <GHC.Types.IO>_N
                                     <Data.Acquire.Internal.Acquire
                                        (Data.Conduit.Internal.Conduit.Source
                                           GHC.Types.IO
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Model.Jogada))>_N)
                                  r)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.Acquire.Internal.Acquire
                                       (Data.Conduit.Internal.Conduit.Source
                                          GHC.Types.IO
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Model.Jogada))>_R)
                                 s of ds3 { (#,#) ipv4 ipv5 ->
                          (Data.Acquire.Internal.with
                             @ GHC.Types.IO
                             @ (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Model.Jogada))
                             @ (GHC.Base.Maybe
                                  (Database.Persist.Class.PersistEntity.Entity Model.Jogada))
                             Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                             ipv5
                             (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend1
                                @ Model.Jogada)
                               `cast`
                             (<Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Model.Jogada)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <GHC.Base.Maybe
                                               (Database.Persist.Class.PersistEntity.Entity
                                                  Model.Jogada)>_R)))
                            `cast`
                          (GHC.Types.N:IO[0]
                               <GHC.Base.Maybe
                                  (Database.Persist.Class.PersistEntity.Entity Model.Jogada)>_R)
                            ipv4 })
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <GHC.Base.Maybe
                                                (Database.Persist.Class.PersistEntity.Entity
                                                   Model.Jogada)>_R))
                              (Sym (Yesod.Core.Types.N:HandlerT[0]
                                        <Foundation.App>_N
                                        <GHC.Types.IO>_N
                                        <GHC.Base.Maybe
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Model.Jogada)>_N))))
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <GHC.Base.Maybe
                                     (Database.Persist.Class.PersistEntity.Entity Model.Jogada)>_N))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv6 ipv7 ipv8 ipv9 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Handler.Jogada.deleteExcluirjogadaR7,
                                  case ipv5 of wild {
                                    GHC.Base.Nothing -> Data.Aeson.Types.Internal.Null
                                    GHC.Base.Just a1 -> Model.$fToJSONEntity5_$ctoJSON a1 })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv4 } } }) -}
dbcac11299a4a1798c38ce2dce318fb0
  getListarjogadaR2 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Model.Jogada]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt Model.Jogada)
                   (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend5
                      @ Model.Jogada)
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Model.Jogada))) -}
441366782237c13cc23f7ddaf93ee7f9
  getListarjogadausuariopartidaidR ::
    Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Jogada.getListarjogadausuariopartidaidR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Data.Aeson.Types.Internal.Value>_N))) -}
42201222c915542922cb993edfc91315
  getListarjogadausuariopartidaidR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Jogada.optionsBusjogadasoR
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Handler.Jogada.getListarjogadausuariopartidaidR_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <(Model.PartidaId, Model.RodadaId)>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <(Model.PartidaId, Model.RodadaId)>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) partidaid rodadaid ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Model.Jogada)))
                   = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                       @ Model.Jogada
                       @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                       @ GHC.Types.IO
                       Handler.Jogada.deleteExcluirjogadaR8
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity Model.Jogada>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Model.D:R:PersistEntityBackendJogada[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                       Control.Monad.IO.Class.$fMonadIOIO
                       (GHC.Types.:
                          @ (Database.Persist.Class.PersistEntity.Filter Model.Jogada)
                          (Database.Persist.Class.PersistEntity.Filter
                             @ Model.Jogada
                             @ Model.PartidaId
                             Model.$fPersistFieldKey9
                             Handler.Jogada.getListarjogadausuariopartidaidR3
                               `cast`
                             (Sym (Model.D:R:EntityFieldJogadatyp0[0]) <Model.PartidaId>_N)
                             (Data.Either.Left @ Model.PartidaId @ [Model.PartidaId] partidaid)
                             Database.Persist.Types.Base.Eq)
                          (GHC.Types.:
                             @ (Database.Persist.Class.PersistEntity.Filter Model.Jogada)
                             (Database.Persist.Class.PersistEntity.Filter
                                @ Model.Jogada
                                @ Model.RodadaId
                                Model.$fPersistFieldKey7
                                Handler.Jogada.getListarjogadausuariopartidaidR2
                                  `cast`
                                (Sym (Model.D:R:EntityFieldJogadatyp0[0]) <Model.RodadaId>_N)
                                (Data.Either.Left @ Model.RodadaId @ [Model.RodadaId] rodadaid)
                                Database.Persist.Types.Base.Eq)
                             (GHC.Types.[]
                                @ (Database.Persist.Class.PersistEntity.Filter Model.Jogada))))
                       (GHC.Types.[]
                          @ (Database.Persist.Class.PersistEntity.SelectOpt Model.Jogada))
                 } in
                 case Foundation.$fYesodPersistApp1
                        @ [Database.Persist.Class.PersistEntity.Entity Model.Jogada]
                        (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                         let {
                           ds :: Yesod.Core.Types.HandlerT
                                   Foundation.App
                                   GHC.Types.IO
                                   (Data.Acquire.Internal.Acquire
                                      (Data.Conduit.Internal.Conduit.Source
                                         GHC.Types.IO
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Model.Jogada)))
                           = m1
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <Data.Acquire.Internal.Acquire
                                     (Data.Conduit.Internal.Conduit.Source
                                        GHC.Types.IO
                                        (Database.Persist.Class.PersistEntity.Entity
                                           Model.Jogada))>_N)
                               r1
                         } in
                         (\ (r :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (ds
                                  `cast`
                                (Yesod.Core.Types.N:HandlerT[0]
                                     <Foundation.App>_N
                                     <GHC.Types.IO>_N
                                     <Data.Acquire.Internal.Acquire
                                        (Data.Conduit.Internal.Conduit.Source
                                           GHC.Types.IO
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Model.Jogada))>_N)
                                  r)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.Acquire.Internal.Acquire
                                       (Data.Conduit.Internal.Conduit.Source
                                          GHC.Types.IO
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Model.Jogada))>_R)
                                 s of ds3 { (#,#) ipv4 ipv5 ->
                          (Data.Acquire.Internal.with
                             @ GHC.Types.IO
                             @ (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Model.Jogada))
                             @ [Database.Persist.Class.PersistEntity.Entity Model.Jogada]
                             Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                             ipv5
                             (Database.Persist.Class.PersistQuery.selectList1 @ Model.Jogada)
                               `cast`
                             (<Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Model.Jogada)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <[Database.Persist.Class.PersistEntity.Entity
                                                Model.Jogada]>_R)))
                            `cast`
                          (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Model.Jogada]>_R)
                            ipv4 })
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <[Database.Persist.Class.PersistEntity.Entity
                                                 Model.Jogada]>_R))
                              (Sym (Yesod.Core.Types.N:HandlerT[0]
                                        <Foundation.App>_N
                                        <GHC.Types.IO>_N
                                        <[Database.Persist.Class.PersistEntity.Entity
                                            Model.Jogada]>_N))))
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity Model.Jogada]>_N))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv6 ipv7 ipv8 ipv9 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Handler.Jogada.deleteExcluirjogadaR7,
                                  case GHC.Magic.runRW#
                                         @ 'GHC.Types.PtrRepLifted
                                         @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                         (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                          case GHC.Prim.newArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 0#
                                                 (Data.Vector.Mutable.uninitialised
                                                    @ Data.Aeson.Types.Internal.Value)
                                                 s1
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv10 ipv11 ->
                                          case Handler.Jogada.getListarjogadausuariopartidaidR_$sfoldlM_loop
                                                 ipv10
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 (GHC.Base.map
                                                    @ (Database.Persist.Class.PersistEntity.Entity
                                                         Model.Jogada)
                                                    @ Data.Aeson.Types.Internal.Value
                                                    Model.$fToJSONEntity5_$ctoJSON
                                                    ipv5)
                                                 0#
                                                 0#
                                                 ipv11
                                                 @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                     (GHC.ST.ST
                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N)
                                                 0# of ds5 { (#,#) ipv12 ipv13 ->
                                          case ipv13 of wild5 { (,) v' n ->
                                          case v'
                                                 `cast`
                                               (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                          (GHC.ST.ST
                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                          case n of dt5 { GHC.Types.I# dt6 ->
                                          case GHC.Prim.unsafeFreezeArray#
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt3
                                                 ipv12
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds { (#,#) ipv14 ipv15 ->
                                          (# ipv14
                                               `cast`
                                             (GHC.Prim.State#
                                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                     <GHC.Prim.RealWorld>_N))_R,
                                             Data.Vector.Vector
                                               @ Data.Aeson.Types.Internal.Value
                                               dt1
                                               dt6
                                               ipv15 #) } } } } } }) of ds4 { (#,#) ipv10 ipv11 ->
                                  case ipv11 of dt1 { Data.Vector.Vector ipv12 ipv13 ipv14 ->
                                  Data.Aeson.Types.Internal.Array dt1 } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv4 } } } }) -}
c11931e7619806bec80ccfa670026980
  getListarjogadausuariopartidaidR2 ::
    Model.R:EntityFieldJogadatyp Model.RodadaId
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Model.JogadaRodadaid
                   @ Model.RodadaId
                   Handler.Jogada.$s$WJogadaRodadaid2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Model.Rodada>_N <Database.Persist.Class.PersistEntity.Key
                                                          Model.Rodada>_N)) -}
3a8eb375053d950c506c12915a169236
  getListarjogadausuariopartidaidR3 ::
    Model.R:EntityFieldJogadatyp Model.PartidaId
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Model.JogadaPartidaid
                   @ Model.PartidaId
                   Handler.Jogada.$s$WJogadaPartidaid2
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Database.Persist.Class.PersistEntity.Key
                                       Model.Partida>_N <Database.Persist.Class.PersistEntity.Key
                                                           Model.Partida>_N)) -}
a0cff3b9f061c4cb26ef5b720562eb00
  getListarjogadausuariopartidaidR_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Data.Aeson.Types.Internal.Value,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
5d6ee6742b3bbc463d160047e2e8c7f9
  getListarjogadausuariopartidaidR_ds ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO (Model.PartidaId, Model.RodadaId)
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ (Model.PartidaId, Model.RodadaId)
                   (Yesod.Auth.defaultMaybeAuthId_$s$fMonadHandlerHandlerT
                      @ Foundation.App)
                   Handler.Jogada.$s$fFromJSON(,)) -}
5d6eb16dc6cdd6d7a81febf8ce545b60
  optionsBusjogadasoR :: Foundation.Handler ()
  {- Unfolding: (Handler.Funcs.anyOriginIn
                   Handler.Jogada.optionsBusjogadasoR1) -}
7fd449ad0351ecd3ac395a2c78ad98ad
  optionsBusjogadasoR1 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.OPTIONS
                   Handler.Jogada.optionsBusjogadasoR2) -}
493450294bfbf9997729c14c67c35845
  optionsBusjogadasoR2 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.GET
                   (GHC.Types.[] @ Handler.Funcs.HttpMethod)) -}
a4b9de9a54bbe02ff2fea5753bb41767
  optionsExcluirjogadaR :: Model.JogadaId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (uid :: Model.JogadaId) ->
                 Handler.Jogada.deleteExcluirjogadaR11) -}
2ca2b0e96a0200b5e1eea312c6e116bd
  optionsJogadaR :: Foundation.Handler ()
  {- Unfolding: (Handler.Funcs.anyOriginIn
                   Handler.Jogada.optionsJogadaR1) -}
11195e5578dac97df0ac6cac08e8f183
  optionsJogadaR1 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.OPTIONS
                   Handler.Jogada.optionsJogadaR2) -}
5127839d66eef0075202d4b18821008f
  optionsJogadaR2 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.POST
                   (GHC.Types.[] @ Handler.Funcs.HttpMethod)) -}
a53a1e900f744872baee623ec1014406
  optionsJogadaidR :: Foundation.Handler ()
  {- Unfolding: (Handler.Funcs.anyOriginIn
                   Handler.Jogada.optionsJogadaidR1) -}
32e75b341b44fc3bf17d283f6a9cead8
  optionsJogadaidR1 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.OPTIONS
                   Handler.Jogada.optionsJogadaidR2) -}
26c0c438603eff59dbfd05dceb191d8d
  optionsJogadaidR2 :: [Handler.Funcs.HttpMethod]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Handler.Funcs.HttpMethod
                   Handler.Funcs.POST
                   Handler.Jogada.optionsBusjogadasoR2) -}
dd4c4a63ba9f68ab98dbcdaac13c0304
  optionsListarjogadaR :: Model.JogadaId -> Foundation.Handler ()
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (uid :: Model.JogadaId) ->
                 Handler.Jogada.optionsListarjogadaR1) -}
81da979eb95ca5943b16119bbe0cc11c
  optionsListarjogadaR1 :: Foundation.Handler ()
  {- Unfolding: (Handler.Jogada.optionsBusjogadasoR) -}
59e509cd9759f1eec37e7e0bd2a2d843
  optionsListarjogadausuariopartidaidR :: Foundation.Handler ()
  {- Unfolding: (Handler.Jogada.optionsJogadaidR) -}
bd5238ab018988822fca42ab115c7c0a
  postJogadaR :: Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Jogada.postJogadaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Data.Aeson.Types.Internal.Value>_N))) -}
88e9a96672c552abb86a21bce0b07f39
  postJogadaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Jogada.optionsJogadaR
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Handler.Jogada.postJogadaR_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <Model.Jogada>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <Model.Jogada>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistApp1
                        @ (Database.Persist.Class.PersistEntity.Key Model.Jogada)
                        (Handler.Jogada.postJogadaR2 ipv3)
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <Database.Persist.Class.PersistEntity.Key Model.Jogada>_N)_R
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv6 ipv7 ipv8 ipv9 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Handler.Jogada.deleteExcluirjogadaR7,
                                  case ipv5
                                         `cast`
                                       (Trans
                                            (Model.D:R:KeyJogada0[0])
                                            (Trans
                                                 (Model.N:R:KeyJogada[0])
                                                 (Trans
                                                      (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                      (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of wild { GHC.Int.I64# x# ->
                                  case GHC.Integer.Type.smallInteger x# of dt1 { DEFAULT ->
                                  Data.Aeson.Types.Internal.Number
                                    (Data.Scientific.Scientific dt1 0#) } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status201
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv4 } } }) -}
9e57a2e9f1aa9e280e07b7119a467131
  postJogadaR2 ::
    Model.Jogada
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Model.Jogada)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Model.Jogada
                   (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                   Handler.Jogada.deleteExcluirjogadaR8
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity Model.Jogada>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendJogada[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
a7ea9d5a0e50a9132b3b4e9ac62ed52b
  postJogadaR_ds ::
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO Model.Jogada
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Model.Jogada
                   (Yesod.Auth.defaultMaybeAuthId_$s$fMonadHandlerHandlerT
                      @ Foundation.App)
                   Model.$fFromJSONJogada) -}
1bf325f4518c38ef35b47fbd16069829
  postJogadaidR :: Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Jogada.getJogadaidR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Data.Aeson.Types.Internal.Value>_N))) -}
0b78f9ede5ba2c5f0cf386f42ddceee9
  postListarjogadausuariopartidaidR ::
    Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Jogada.postListarjogadausuariopartidaidR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Data.Aeson.Types.Internal.Value>_N))) -}
774f357ecfc1174bce42a9a1f801d696
  postListarjogadausuariopartidaidR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Jogada.optionsBusjogadasoR
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Handler.Jogada.getListarjogadausuariopartidaidR_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <(Model.PartidaId, Model.RodadaId)>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <(Model.PartidaId, Model.RodadaId)>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) partidaid rodadaid ->
                 let {
                   m1 :: Control.Monad.Trans.Reader.ReaderT
                           Database.Persist.Sql.Types.Internal.SqlBackend
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Model.Jogada)))
                   = Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                       @ Model.Jogada
                       @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                       @ GHC.Types.IO
                       Handler.Jogada.deleteExcluirjogadaR8
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistEntity.PersistEntity Model.Jogada>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Model.D:R:PersistEntityBackendJogada[0]))
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                       (Yesod.Auth.$dmgetAuthEntity_$s$fMonadIOHandlerT @ Foundation.App)
                       Control.Monad.IO.Class.$fMonadIOIO
                       (GHC.Types.:
                          @ (Database.Persist.Class.PersistEntity.Filter Model.Jogada)
                          (Database.Persist.Class.PersistEntity.Filter
                             @ Model.Jogada
                             @ Model.PartidaId
                             Model.$fPersistFieldKey9
                             Handler.Jogada.getListarjogadausuariopartidaidR3
                               `cast`
                             (Sym (Model.D:R:EntityFieldJogadatyp0[0]) <Model.PartidaId>_N)
                             (Data.Either.Left @ Model.PartidaId @ [Model.PartidaId] partidaid)
                             Database.Persist.Types.Base.Eq)
                          (GHC.Types.:
                             @ (Database.Persist.Class.PersistEntity.Filter Model.Jogada)
                             (Database.Persist.Class.PersistEntity.Filter
                                @ Model.Jogada
                                @ Model.RodadaId
                                Model.$fPersistFieldKey7
                                Handler.Jogada.getListarjogadausuariopartidaidR2
                                  `cast`
                                (Sym (Model.D:R:EntityFieldJogadatyp0[0]) <Model.RodadaId>_N)
                                (Data.Either.Left @ Model.RodadaId @ [Model.RodadaId] rodadaid)
                                Database.Persist.Types.Base.Eq)
                             (GHC.Types.[]
                                @ (Database.Persist.Class.PersistEntity.Filter Model.Jogada))))
                       (GHC.Types.[]
                          @ (Database.Persist.Class.PersistEntity.SelectOpt Model.Jogada))
                 } in
                 case Foundation.$fYesodPersistApp1
                        @ [Database.Persist.Class.PersistEntity.Entity Model.Jogada]
                        (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                         let {
                           ds :: Yesod.Core.Types.HandlerT
                                   Foundation.App
                                   GHC.Types.IO
                                   (Data.Acquire.Internal.Acquire
                                      (Data.Conduit.Internal.Conduit.Source
                                         GHC.Types.IO
                                         (Database.Persist.Class.PersistEntity.Entity
                                            Model.Jogada)))
                           = m1
                               `cast`
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <Data.Acquire.Internal.Acquire
                                     (Data.Conduit.Internal.Conduit.Source
                                        GHC.Types.IO
                                        (Database.Persist.Class.PersistEntity.Entity
                                           Model.Jogada))>_N)
                               r1
                         } in
                         (\ (r :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (ds
                                  `cast`
                                (Yesod.Core.Types.N:HandlerT[0]
                                     <Foundation.App>_N
                                     <GHC.Types.IO>_N
                                     <Data.Acquire.Internal.Acquire
                                        (Data.Conduit.Internal.Conduit.Source
                                           GHC.Types.IO
                                           (Database.Persist.Class.PersistEntity.Entity
                                              Model.Jogada))>_N)
                                  r)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.Acquire.Internal.Acquire
                                       (Data.Conduit.Internal.Conduit.Source
                                          GHC.Types.IO
                                          (Database.Persist.Class.PersistEntity.Entity
                                             Model.Jogada))>_R)
                                 s of ds3 { (#,#) ipv4 ipv5 ->
                          (Data.Acquire.Internal.with
                             @ GHC.Types.IO
                             @ (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Model.Jogada))
                             @ [Database.Persist.Class.PersistEntity.Entity Model.Jogada]
                             Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                             ipv5
                             (Database.Persist.Class.PersistQuery.selectList1 @ Model.Jogada)
                               `cast`
                             (<Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Model.Jogada)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <[Database.Persist.Class.PersistEntity.Entity
                                                Model.Jogada]>_R)))
                            `cast`
                          (GHC.Types.N:IO[0]
                               <[Database.Persist.Class.PersistEntity.Entity Model.Jogada]>_R)
                            ipv4 })
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <[Database.Persist.Class.PersistEntity.Entity
                                                 Model.Jogada]>_R))
                              (Sym (Yesod.Core.Types.N:HandlerT[0]
                                        <Foundation.App>_N
                                        <GHC.Types.IO>_N
                                        <[Database.Persist.Class.PersistEntity.Entity
                                            Model.Jogada]>_N))))
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity Model.Jogada]>_N))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ Data.Aeson.Types.Internal.Value
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv6 ipv7 ipv8 ipv9 ->
                       case Data.Aeson.Types.Internal.$sfromList1
                              @ Data.Aeson.Types.Internal.Value
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Handler.Jogada.deleteExcluirjogadaR7,
                                  case GHC.Magic.runRW#
                                         @ 'GHC.Types.PtrRepLifted
                                         @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                         (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                          case GHC.Prim.newArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 0#
                                                 (Data.Vector.Mutable.uninitialised
                                                    @ Data.Aeson.Types.Internal.Value)
                                                 s1
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv10 ipv11 ->
                                          case Handler.Jogada.postListarjogadausuariopartidaidR_$sfoldlM_loop
                                                 ipv10
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 (GHC.Base.map
                                                    @ (Database.Persist.Class.PersistEntity.Entity
                                                         Model.Jogada)
                                                    @ Data.Aeson.Types.Internal.Value
                                                    Model.$fToJSONEntity5_$ctoJSON
                                                    ipv5)
                                                 0#
                                                 0#
                                                 ipv11
                                                 @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                     (GHC.ST.ST
                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N)
                                                 0# of ds5 { (#,#) ipv12 ipv13 ->
                                          case ipv13 of wild5 { (,) v' n ->
                                          case v'
                                                 `cast`
                                               (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                          (GHC.ST.ST
                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                          case n of dt5 { GHC.Types.I# dt6 ->
                                          case GHC.Prim.unsafeFreezeArray#
                                                 @ (Control.Monad.Primitive.PrimState
                                                      (GHC.ST.ST GHC.Prim.RealWorld))
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt3
                                                 ipv12
                                                   `cast`
                                                 (GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R of ds { (#,#) ipv14 ipv15 ->
                                          (# ipv14
                                               `cast`
                                             (GHC.Prim.State#
                                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                     <GHC.Prim.RealWorld>_N))_R,
                                             Data.Vector.Vector
                                               @ Data.Aeson.Types.Internal.Value
                                               dt1
                                               dt6
                                               ipv15 #) } } } } } }) of ds4 { (#,#) ipv10 ipv11 ->
                                  case ipv11 of dt1 { Data.Vector.Vector ipv12 ipv13 ipv14 ->
                                  Data.Aeson.Types.Internal.Array dt1 } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                              (Data.HashMap.Base.Empty
                                 @ Data.Text.Internal.Text
                                 @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                       case (Data.Aeson.Encoding.Builder.encodeToBuilder
                               (Data.Aeson.Types.Internal.Object dt1))
                              `cast`
                            (Data.ByteString.Builder.Internal.N:Builder[0]) of nt { DEFAULT ->
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               nt `cast` (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                               (GHC.Base.Nothing @ GHC.Types.Int))) } } }))
                   ipv4 } } } }) -}
ea5856538f690e20e9d5da0cac4e625e
  postListarjogadausuariopartidaidR_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         Data.Aeson.Types.Internal.Value
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Data.Aeson.Types.Internal.Value,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
"SPEC/Handler.Jogada $fFromJSON(,) @ (Key Partida) @ (Key Rodada)" [ALWAYS] forall ($dFromJSON1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                     (Database.Persist.Class.PersistEntity.Key
                                                                                                        Model.Rodada))
                                                                                   ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                    (Database.Persist.Class.PersistEntity.Key
                                                                                                       Model.Partida))
  Data.Aeson.Types.FromJSON.$fFromJSON(,) @ (Database.Persist.Class.PersistEntity.Key
                                               Model.Partida)
                                          @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                          $dFromJSON
                                          $dFromJSON1
  = Handler.Jogada.$s$fFromJSON(,)
"SPEC/Handler.Jogada $fFromJSON(,,) @ (Key Partida) @ (Key
                                                        Rodada) @ (Key Usuario)" [ALWAYS] forall ($dFromJSON2 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                                              (Database.Persist.Class.PersistEntity.Key
                                                                                                                                                                                 Model.Usuario))
                                                                                                                                                            ($dFromJSON1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                                              (Database.Persist.Class.PersistEntity.Key
                                                                                                                                                                                 Model.Rodada))
                                                                                                                                                            ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                                                                                             (Database.Persist.Class.PersistEntity.Key
                                                                                                                                                                                Model.Partida))
  Data.Aeson.Types.FromJSON.$fFromJSON(,,) @ (Database.Persist.Class.PersistEntity.Key
                                                Model.Partida)
                                           @ (Database.Persist.Class.PersistEntity.Key Model.Rodada)
                                           @ (Database.Persist.Class.PersistEntity.Key
                                                Model.Usuario)
                                           $dFromJSON
                                           $dFromJSON1
                                           $dFromJSON2
  = Handler.Jogada.$s$fFromJSON(,,)
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

